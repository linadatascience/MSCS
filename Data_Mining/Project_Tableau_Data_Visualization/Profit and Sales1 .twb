<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0404.1406                               -->
<workbook original-version='10.5' source-build='10.5.3 (10500.18.0404.1406)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='stroke-color' value='#ffffff' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
      <column caption='Sale Volume' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='10000'>
        <calculation class='tableau' formula='10000' />
        <range max='10000' min='1' />
      </column>
    </datasource>
    <datasource caption='Global Superstore Returns 2016' inline='true' name='federated.05zgy0a19n714x15i7efs13b96dk' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore Returns 2016' name='textscan.0d8rkw41d0p5bd1flebfz1iuk82f'>
            <connection class='textscan' directory='C:/Users/Radhika/Desktop/CS Syllabus/Data science Project/Group project 2' filename='Global Superstore Returns 2016.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0d8rkw41d0p5bd1flebfz1iuk82f' name='Global Superstore Returns 2016.csv' table='[Global Superstore Returns 2016#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Returned' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.405844' measure-ordering='alphabetic' measure-percentage='0.262987' parameter-percentage='0.331169' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Global Superstore People - People' inline='true' name='federated.1qr71n81rwvzo61gmnak00ypmpj2' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore People - People' name='textscan.1g0s13b07b9myu186lgyd1mz22nd'>
            <connection class='textscan' directory='C:/Users/Radhika/Desktop/CS Syllabus/Data science Project/Group project 2' filename='Global Superstore People - People.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1g0s13b07b9myu186lgyd1mz22nd' name='Global Superstore People - People.csv' table='[Global Superstore People - People#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Person' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.353511' measure-ordering='alphabetic' measure-percentage='0.297821' parameter-percentage='0.348668' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Global Superstore Orders 2016 (2)' inline='true' name='federated.0efq9ho0rhk29e19r3sxy1qskrfm' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore Orders 2016' name='textscan.1o8u2n00eyw73m11ocsdc1ygeekn'>
            <connection class='textscan' directory='C:/Users/Radhika/Desktop/CS Syllabus/Data science Project/Group project 2' filename='Global Superstore Orders 2016.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Global Superstore Orders 2016.csv].[Order ID]' />
              <expression op='[Global Superstore Returns 2016.csv].[Order ID]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Global Superstore Orders 2016.csv].[Region]' />
                <expression op='[Global Superstore People - People.csv].[Region]' />
              </expression>
            </clause>
            <relation connection='textscan.1o8u2n00eyw73m11ocsdc1ygeekn' name='Global Superstore Orders 2016.csv' table='[Global Superstore Orders 2016#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='integer' name='Postal Code' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='string' name='Country' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Market' ordinal='13' />
                <column datatype='string' name='Product ID' ordinal='14' />
                <column datatype='string' name='Category' ordinal='15' />
                <column datatype='string' name='Sub-Category' ordinal='16' />
                <column datatype='string' name='Product Name' ordinal='17' />
                <column datatype='real' name='Sales' ordinal='18' />
                <column datatype='integer' name='Quantity' ordinal='19' />
                <column datatype='real' name='Discount' ordinal='20' />
                <column datatype='real' name='Profit' ordinal='21' />
                <column datatype='real' name='Shipping Cost' ordinal='22' />
                <column datatype='string' name='Order Priority' ordinal='23' />
              </columns>
            </relation>
            <relation connection='textscan.1o8u2n00eyw73m11ocsdc1ygeekn' name='Global Superstore People - People.csv' table='[Global Superstore People - People#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='Person' ordinal='0' />
                <column datatype='string' name='Region' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1o8u2n00eyw73m11ocsdc1ygeekn' name='Global Superstore Returns 2016.csv' table='[Global Superstore Returns 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Global Superstore Orders 2016.csv].[Category]' />
          <map key='[City]' value='[Global Superstore Orders 2016.csv].[City]' />
          <map key='[Country]' value='[Global Superstore Orders 2016.csv].[Country]' />
          <map key='[Customer ID]' value='[Global Superstore Orders 2016.csv].[Customer ID]' />
          <map key='[Customer Name]' value='[Global Superstore Orders 2016.csv].[Customer Name]' />
          <map key='[Discount]' value='[Global Superstore Orders 2016.csv].[Discount]' />
          <map key='[Market]' value='[Global Superstore Orders 2016.csv].[Market]' />
          <map key='[Order Date]' value='[Global Superstore Orders 2016.csv].[Order Date]' />
          <map key='[Order ID (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Order ID]' />
          <map key='[Order ID]' value='[Global Superstore Orders 2016.csv].[Order ID]' />
          <map key='[Order Priority]' value='[Global Superstore Orders 2016.csv].[Order Priority]' />
          <map key='[Person]' value='[Global Superstore People - People.csv].[Person]' />
          <map key='[Postal Code]' value='[Global Superstore Orders 2016.csv].[Postal Code]' />
          <map key='[Product ID]' value='[Global Superstore Orders 2016.csv].[Product ID]' />
          <map key='[Product Name]' value='[Global Superstore Orders 2016.csv].[Product Name]' />
          <map key='[Profit]' value='[Global Superstore Orders 2016.csv].[Profit]' />
          <map key='[Quantity]' value='[Global Superstore Orders 2016.csv].[Quantity]' />
          <map key='[Region (Global Superstore People - People.csv)]' value='[Global Superstore People - People.csv].[Region]' />
          <map key='[Region (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Region]' />
          <map key='[Region]' value='[Global Superstore Orders 2016.csv].[Region]' />
          <map key='[Returned]' value='[Global Superstore Returns 2016.csv].[Returned]' />
          <map key='[Row ID]' value='[Global Superstore Orders 2016.csv].[Row ID]' />
          <map key='[Sales]' value='[Global Superstore Orders 2016.csv].[Sales]' />
          <map key='[Segment]' value='[Global Superstore Orders 2016.csv].[Segment]' />
          <map key='[Ship Date]' value='[Global Superstore Orders 2016.csv].[Ship Date]' />
          <map key='[Ship Mode]' value='[Global Superstore Orders 2016.csv].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Global Superstore Orders 2016.csv].[Shipping Cost]' />
          <map key='[State]' value='[Global Superstore Orders 2016.csv].[State]' />
          <map key='[Sub-Category]' value='[Global Superstore Orders 2016.csv].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Global Superstore People - People.csv)]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.506494' measure-ordering='alphabetic' measure-percentage='0.288961' parameter-percentage='0.204545' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Order Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2012</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='Global Superstore Orders 2016+' inline='true' name='federated.1u059781ylo89b15rtfmv07bs4ce' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore Orders 2016' name='textscan.1j4vahe0e7jkli1exfkj718u7toc'>
            <connection class='textscan' directory='C:/Users/Radhika/Desktop/CS Syllabus/Data science Project/Group project 2' filename='Global Superstore Orders 2016.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Global Superstore Orders 2016.csv].[Order ID]' />
              <expression op='[Global Superstore Returns 2016.csv].[Order ID]' />
            </expression>
          </clause>
          <relation connection='textscan.1j4vahe0e7jkli1exfkj718u7toc' name='Global Superstore Orders 2016.csv' table='[Global Superstore Orders 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='textscan.1j4vahe0e7jkli1exfkj718u7toc' name='Global Superstore Returns 2016.csv' table='[Global Superstore Returns 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Global Superstore Orders 2016.csv].[Category]' />
          <map key='[City]' value='[Global Superstore Orders 2016.csv].[City]' />
          <map key='[Country]' value='[Global Superstore Orders 2016.csv].[Country]' />
          <map key='[Customer ID]' value='[Global Superstore Orders 2016.csv].[Customer ID]' />
          <map key='[Customer Name]' value='[Global Superstore Orders 2016.csv].[Customer Name]' />
          <map key='[Discount]' value='[Global Superstore Orders 2016.csv].[Discount]' />
          <map key='[Market]' value='[Global Superstore Orders 2016.csv].[Market]' />
          <map key='[Order Date]' value='[Global Superstore Orders 2016.csv].[Order Date]' />
          <map key='[Order ID (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Order ID]' />
          <map key='[Order ID]' value='[Global Superstore Orders 2016.csv].[Order ID]' />
          <map key='[Order Priority]' value='[Global Superstore Orders 2016.csv].[Order Priority]' />
          <map key='[Postal Code]' value='[Global Superstore Orders 2016.csv].[Postal Code]' />
          <map key='[Product ID]' value='[Global Superstore Orders 2016.csv].[Product ID]' />
          <map key='[Product Name]' value='[Global Superstore Orders 2016.csv].[Product Name]' />
          <map key='[Profit]' value='[Global Superstore Orders 2016.csv].[Profit]' />
          <map key='[Quantity]' value='[Global Superstore Orders 2016.csv].[Quantity]' />
          <map key='[Region (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Region]' />
          <map key='[Region]' value='[Global Superstore Orders 2016.csv].[Region]' />
          <map key='[Returned]' value='[Global Superstore Returns 2016.csv].[Returned]' />
          <map key='[Row ID]' value='[Global Superstore Orders 2016.csv].[Row ID]' />
          <map key='[Sales]' value='[Global Superstore Orders 2016.csv].[Sales]' />
          <map key='[Segment]' value='[Global Superstore Orders 2016.csv].[Segment]' />
          <map key='[Ship Date]' value='[Global Superstore Orders 2016.csv].[Ship Date]' />
          <map key='[Ship Mode]' value='[Global Superstore Orders 2016.csv].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Global Superstore Orders 2016.csv].[Shipping Cost]' />
          <map key='[State]' value='[Global Superstore Orders 2016.csv].[State]' />
          <map key='[Sub-Category]' value='[Global Superstore Orders 2016.csv].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Order ID (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Order ID]' />
      </column>
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Returned1' datatype='string' name='[Returned]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.457792' measure-ordering='alphabetic' measure-percentage='0.467532' parameter-percentage='0.0746753' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Order Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Global Superstore Orders 2016+ (2)' inline='true' name='federated.1u059781ylo89b15rtfmv07bs4ce (copy)' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore People - People' name='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi'>
            <connection class='textscan' directory='C:/Users/Radhika/Desktop/CS Syllabus/Data science Project/Group project 2' filename='Global Superstore People - People.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Global Superstore Orders 2016.csv].[Region]' />
              <expression op='[Global Superstore People - People.csv].[Region]' />
            </expression>
          </clause>
          <relation connection='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi' name='Global Superstore Orders 2016.csv' table='[Global Superstore Orders 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi' name='Global Superstore People - People.csv' table='[Global Superstore People - People#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Global Superstore Orders 2016.csv].[Category]' />
          <map key='[City]' value='[Global Superstore Orders 2016.csv].[City]' />
          <map key='[Country]' value='[Global Superstore Orders 2016.csv].[Country]' />
          <map key='[Customer ID]' value='[Global Superstore Orders 2016.csv].[Customer ID]' />
          <map key='[Customer Name]' value='[Global Superstore Orders 2016.csv].[Customer Name]' />
          <map key='[Discount]' value='[Global Superstore Orders 2016.csv].[Discount]' />
          <map key='[Market]' value='[Global Superstore Orders 2016.csv].[Market]' />
          <map key='[Order Date]' value='[Global Superstore Orders 2016.csv].[Order Date]' />
          <map key='[Order ID]' value='[Global Superstore Orders 2016.csv].[Order ID]' />
          <map key='[Order Priority]' value='[Global Superstore Orders 2016.csv].[Order Priority]' />
          <map key='[Person]' value='[Global Superstore People - People.csv].[Person]' />
          <map key='[Postal Code]' value='[Global Superstore Orders 2016.csv].[Postal Code]' />
          <map key='[Product ID]' value='[Global Superstore Orders 2016.csv].[Product ID]' />
          <map key='[Product Name]' value='[Global Superstore Orders 2016.csv].[Product Name]' />
          <map key='[Profit]' value='[Global Superstore Orders 2016.csv].[Profit]' />
          <map key='[Quantity]' value='[Global Superstore Orders 2016.csv].[Quantity]' />
          <map key='[Region (Global Superstore People - People.csv)]' value='[Global Superstore People - People.csv].[Region]' />
          <map key='[Region]' value='[Global Superstore Orders 2016.csv].[Region]' />
          <map key='[Row ID]' value='[Global Superstore Orders 2016.csv].[Row ID]' />
          <map key='[Sales]' value='[Global Superstore Orders 2016.csv].[Sales]' />
          <map key='[Segment]' value='[Global Superstore Orders 2016.csv].[Segment]' />
          <map key='[Ship Date]' value='[Global Superstore Orders 2016.csv].[Ship Date]' />
          <map key='[Ship Mode]' value='[Global Superstore Orders 2016.csv].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Global Superstore Orders 2016.csv].[Shipping Cost]' />
          <map key='[State]' value='[Global Superstore Orders 2016.csv].[State]' />
          <map key='[Sub-Category]' value='[Global Superstore Orders 2016.csv].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Global Superstore People - People.csv)]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' hidden='true' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Person]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
      <group name='[Top 5 Sales person]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Person:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.181495' group-percentage='0.0818505' measure-ordering='alphabetic' measure-percentage='0.551601' parameter-percentage='0.185053' show-hidden-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Global Superstore Orders 2016+ (3)' inline='true' name='federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore People - People' name='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi (copy)'>
            <connection class='textscan' directory='C:/Users/Radhika/Desktop/CS Syllabus/Data science Project/Group project 2' filename='Global Superstore People - People.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Global Superstore Orders 2016.csv].[Region]' />
              <expression op='[Global Superstore People - People.csv].[Region]' />
            </expression>
          </clause>
          <relation connection='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi (copy)' name='Global Superstore Orders 2016.csv' table='[Global Superstore Orders 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi (copy)' name='Global Superstore People - People.csv' table='[Global Superstore People - People#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Global Superstore Orders 2016.csv].[Category]' />
          <map key='[City]' value='[Global Superstore Orders 2016.csv].[City]' />
          <map key='[Country]' value='[Global Superstore Orders 2016.csv].[Country]' />
          <map key='[Customer ID]' value='[Global Superstore Orders 2016.csv].[Customer ID]' />
          <map key='[Customer Name]' value='[Global Superstore Orders 2016.csv].[Customer Name]' />
          <map key='[Discount]' value='[Global Superstore Orders 2016.csv].[Discount]' />
          <map key='[Market]' value='[Global Superstore Orders 2016.csv].[Market]' />
          <map key='[Order Date]' value='[Global Superstore Orders 2016.csv].[Order Date]' />
          <map key='[Order ID]' value='[Global Superstore Orders 2016.csv].[Order ID]' />
          <map key='[Order Priority]' value='[Global Superstore Orders 2016.csv].[Order Priority]' />
          <map key='[Person]' value='[Global Superstore People - People.csv].[Person]' />
          <map key='[Postal Code]' value='[Global Superstore Orders 2016.csv].[Postal Code]' />
          <map key='[Product ID]' value='[Global Superstore Orders 2016.csv].[Product ID]' />
          <map key='[Product Name]' value='[Global Superstore Orders 2016.csv].[Product Name]' />
          <map key='[Profit]' value='[Global Superstore Orders 2016.csv].[Profit]' />
          <map key='[Quantity]' value='[Global Superstore Orders 2016.csv].[Quantity]' />
          <map key='[Region (Global Superstore People - People.csv)]' value='[Global Superstore People - People.csv].[Region]' />
          <map key='[Region]' value='[Global Superstore Orders 2016.csv].[Region]' />
          <map key='[Row ID]' value='[Global Superstore Orders 2016.csv].[Row ID]' />
          <map key='[Sales]' value='[Global Superstore Orders 2016.csv].[Sales]' />
          <map key='[Segment]' value='[Global Superstore Orders 2016.csv].[Segment]' />
          <map key='[Ship Date]' value='[Global Superstore Orders 2016.csv].[Ship Date]' />
          <map key='[Ship Mode]' value='[Global Superstore Orders 2016.csv].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Global Superstore Orders 2016.csv].[Shipping Cost]' />
          <map key='[State]' value='[Global Superstore Orders 2016.csv].[State]' />
          <map key='[Sub-Category]' value='[Global Superstore Orders 2016.csv].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Global Superstore People - People.csv)]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' hidden='true' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Person]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
      <group name='[Top 5 Sales person]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Person:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.195046' group-percentage='0.0743034' measure-ordering='alphabetic' measure-percentage='0.535604' parameter-percentage='0.195046' show-hidden-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Global Superstore Orders 2016+ (4)' inline='true' name='federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore People - People' name='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi (copy 2)'>
            <connection class='textscan' directory='C:/Users/Radhika/Desktop/CS Syllabus/Data science Project/Group project 2' filename='Global Superstore People - People.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Global Superstore Orders 2016.csv].[Region]' />
              <expression op='[Global Superstore People - People.csv].[Region]' />
            </expression>
          </clause>
          <relation connection='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi (copy 2)' name='Global Superstore Orders 2016.csv' table='[Global Superstore Orders 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi (copy 2)' name='Global Superstore People - People.csv' table='[Global Superstore People - People#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Global Superstore Orders 2016.csv].[Category]' />
          <map key='[City]' value='[Global Superstore Orders 2016.csv].[City]' />
          <map key='[Country]' value='[Global Superstore Orders 2016.csv].[Country]' />
          <map key='[Customer ID]' value='[Global Superstore Orders 2016.csv].[Customer ID]' />
          <map key='[Customer Name]' value='[Global Superstore Orders 2016.csv].[Customer Name]' />
          <map key='[Discount]' value='[Global Superstore Orders 2016.csv].[Discount]' />
          <map key='[Market]' value='[Global Superstore Orders 2016.csv].[Market]' />
          <map key='[Order Date]' value='[Global Superstore Orders 2016.csv].[Order Date]' />
          <map key='[Order ID]' value='[Global Superstore Orders 2016.csv].[Order ID]' />
          <map key='[Order Priority]' value='[Global Superstore Orders 2016.csv].[Order Priority]' />
          <map key='[Person]' value='[Global Superstore People - People.csv].[Person]' />
          <map key='[Postal Code]' value='[Global Superstore Orders 2016.csv].[Postal Code]' />
          <map key='[Product ID]' value='[Global Superstore Orders 2016.csv].[Product ID]' />
          <map key='[Product Name]' value='[Global Superstore Orders 2016.csv].[Product Name]' />
          <map key='[Profit]' value='[Global Superstore Orders 2016.csv].[Profit]' />
          <map key='[Quantity]' value='[Global Superstore Orders 2016.csv].[Quantity]' />
          <map key='[Region (Global Superstore People - People.csv)]' value='[Global Superstore People - People.csv].[Region]' />
          <map key='[Region]' value='[Global Superstore Orders 2016.csv].[Region]' />
          <map key='[Row ID]' value='[Global Superstore Orders 2016.csv].[Row ID]' />
          <map key='[Sales]' value='[Global Superstore Orders 2016.csv].[Sales]' />
          <map key='[Segment]' value='[Global Superstore Orders 2016.csv].[Segment]' />
          <map key='[Ship Date]' value='[Global Superstore Orders 2016.csv].[Ship Date]' />
          <map key='[Ship Mode]' value='[Global Superstore Orders 2016.csv].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Global Superstore Orders 2016.csv].[Shipping Cost]' />
          <map key='[State]' value='[Global Superstore Orders 2016.csv].[State]' />
          <map key='[Sub-Category]' value='[Global Superstore Orders 2016.csv].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Global Superstore People - People.csv)]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' hidden='true' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Person]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
      <group name='[Top 5 Sales person]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Person:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.18543' group-percentage='0.0761589' measure-ordering='alphabetic' measure-percentage='0.55298' parameter-percentage='0.18543' show-hidden-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Global Superstore Orders 2016+ (5)' inline='true' name='federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore People - People' name='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi (copy 3)'>
            <connection class='textscan' directory='C:/Users/Radhika/Desktop/CS Syllabus/Data science Project/Group project 2' filename='Global Superstore People - People.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Global Superstore Orders 2016.csv].[Region]' />
              <expression op='[Global Superstore People - People.csv].[Region]' />
            </expression>
          </clause>
          <relation connection='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi (copy 3)' name='Global Superstore Orders 2016.csv' table='[Global Superstore Orders 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='textscan.1dsmwvb0ajjkpm11yby2f0miqzzi (copy 3)' name='Global Superstore People - People.csv' table='[Global Superstore People - People#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Global Superstore Orders 2016.csv].[Category]' />
          <map key='[City]' value='[Global Superstore Orders 2016.csv].[City]' />
          <map key='[Country]' value='[Global Superstore Orders 2016.csv].[Country]' />
          <map key='[Customer ID]' value='[Global Superstore Orders 2016.csv].[Customer ID]' />
          <map key='[Customer Name]' value='[Global Superstore Orders 2016.csv].[Customer Name]' />
          <map key='[Discount]' value='[Global Superstore Orders 2016.csv].[Discount]' />
          <map key='[Market]' value='[Global Superstore Orders 2016.csv].[Market]' />
          <map key='[Order Date]' value='[Global Superstore Orders 2016.csv].[Order Date]' />
          <map key='[Order ID]' value='[Global Superstore Orders 2016.csv].[Order ID]' />
          <map key='[Order Priority]' value='[Global Superstore Orders 2016.csv].[Order Priority]' />
          <map key='[Person]' value='[Global Superstore People - People.csv].[Person]' />
          <map key='[Postal Code]' value='[Global Superstore Orders 2016.csv].[Postal Code]' />
          <map key='[Product ID]' value='[Global Superstore Orders 2016.csv].[Product ID]' />
          <map key='[Product Name]' value='[Global Superstore Orders 2016.csv].[Product Name]' />
          <map key='[Profit]' value='[Global Superstore Orders 2016.csv].[Profit]' />
          <map key='[Quantity]' value='[Global Superstore Orders 2016.csv].[Quantity]' />
          <map key='[Region (Global Superstore People - People.csv)]' value='[Global Superstore People - People.csv].[Region]' />
          <map key='[Region]' value='[Global Superstore Orders 2016.csv].[Region]' />
          <map key='[Row ID]' value='[Global Superstore Orders 2016.csv].[Row ID]' />
          <map key='[Sales]' value='[Global Superstore Orders 2016.csv].[Sales]' />
          <map key='[Segment]' value='[Global Superstore Orders 2016.csv].[Segment]' />
          <map key='[Ship Date]' value='[Global Superstore Orders 2016.csv].[Ship Date]' />
          <map key='[Ship Mode]' value='[Global Superstore Orders 2016.csv].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Global Superstore Orders 2016.csv].[Shipping Cost]' />
          <map key='[State]' value='[Global Superstore Orders 2016.csv].[State]' />
          <map key='[Sub-Category]' value='[Global Superstore Orders 2016.csv].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Global Superstore Orders 2016.csv]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Global Superstore People - People.csv)]</local-name>
            <parent-name>[Global Superstore People - People.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' hidden='true' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Person]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
      <group name='[Top 5 Sales person]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Person:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.188623' group-percentage='0.0718563' measure-ordering='alphabetic' measure-percentage='0.550898' parameter-percentage='0.188623' show-hidden-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Countries With Total Sale Volume &lt;5K'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Countries With Total Sale Volume &lt;5K For Last 3 Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016 (2)' name='federated.0efq9ho0rhk29e19r3sxy1qskrfm' />
          </datasources>
          <datasource-dependencies datasource='federated.0efq9ho0rhk29e19r3sxy1qskrfm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]'>
            <groupfilter count='25' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Sales])' function='order' user:ui-marker='order'>
                <groupfilter expression='COUNT([Sales]) &lt; 5' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]' direction='DESC' using='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk]' />
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</column>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' scope='cols' value='10' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='10' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-weight' scope='cols' value='normal' />
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk]' value='10' />
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk]' value='bold' />
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]' value='10' />
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk]</rows>
        <cols>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Loss Countries '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Top 20 Loss Yielding Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016 (2)' name='federated.0efq9ho0rhk29e19r3sxy1qskrfm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0efq9ho0rhk29e19r3sxy1qskrfm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]'>
            <groupfilter count='20' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter expression='SUM([Profit]) &lt;= 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]' direction='DESC' using='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' />
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</column>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='rows' value='10' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]</rows>
        <cols>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='No.of Records sold vs Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016 (2)' name='federated.0efq9ho0rhk29e19r3sxy1qskrfm' />
          </datasources>
          <datasource-dependencies datasource='federated.0efq9ho0rhk29e19r3sxy1qskrfm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk] / ([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk] / [federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]))</rows>
        <cols>([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Number of Records:qk] + [federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Performance -Sales person'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016+ (2)' name='federated.1u059781ylo89b15rtfmv07bs4ce (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1u059781ylo89b15rtfmv07bs4ce (copy)'>
            <column datatype='string' name='[Person]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Person:nk]'>
            <groupfilter function='level-members' level='[none:Person:nk]' />
          </filter>
          <sort class='computed' column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Person:nk]' direction='DESC' using='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[sum:Sales:qk]' />
          <sort class='computed' column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Region:nk]' direction='DESC' using='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[sum:Sales:qk]' />
          <slices>
            <column>[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Person:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Person:nk]' value='24' />
            <format attr='width' field='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Region:nk]' value='21' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Region:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Person:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[sum:Sales:qk]' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[sum:Sales:qk]' />
              <text column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[sum:Sales:qk]</rows>
        <cols>([federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Person:nk] / [federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Region:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Performance-Profit person '>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016+ (3)' name='federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)'>
            <column datatype='string' name='[Person]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (Global Superstore People - People.csv)]' role='dimension' type='nominal' />
            <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (Global Superstore People - People.csv)]' derivation='None' name='[none:Region (Global Superstore People - People.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[none:Person:nk]' direction='DESC' using='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[sum:Profit:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[none:Person:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[sum:Profit:qk]' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[sum:Profit:qk]' />
              <lod column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[sum:Profit:qk]</rows>
        <cols>([federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[none:Person:nk] / [federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[none:Region (Global Superstore People - People.csv):nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Profit Distribution For Last 3 Years Countrywise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Countrywise Profit Distribution Per Category for Last 3 Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016 (2)' name='federated.0efq9ho0rhk29e19r3sxy1qskrfm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0efq9ho0rhk29e19r3sxy1qskrfm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' direction='DESC' />
          <filter class='quantitative' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' included-values='in-range-or-null'>
            <min>-12433.359999999999</min>
            <max>50707.320000000014</max>
          </filter>
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</column>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[Longitude (generated)]' field-type='quantitative' max='24498887.989585623' min='-21782735.282487184' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[Latitude (generated)]' field-type='quantitative' max='25774554.103813693' min='-11399440.492228707' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]' />
              <color column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' />
              <geometry column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk] * [federated.0efq9ho0rhk29e19r3sxy1qskrfm].[Latitude (generated)])</rows>
        <cols>([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok] * [federated.0efq9ho0rhk29e19r3sxy1qskrfm].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Profits Per Product Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Profits Per Product Category For Last 3 Years</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontcolor='#000000'>Sum of Profit for each Order Date Year broken down by Category and Sub-Category.  Color shows details about Order Date Year. The view is filtered on Order Date Year, which keeps 2013, 2014 and 2015.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016 (2)' name='federated.0efq9ho0rhk29e19r3sxy1qskrfm' />
          </datasources>
          <datasource-dependencies datasource='federated.0efq9ho0rhk29e19r3sxy1qskrfm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' direction='DESC' using='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' />
          <slices>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='#499894' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' value='#f6ff9d' />
            <format attr='border-color' data-class='total' value='#000000' />
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='background-color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='normal' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' value='bold' />
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' value='10' />
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='10' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='bold' />
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='#000000' />
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' value='#000000' />
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' value='10' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' value='bold' />
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' value='bold' />
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' value='11' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
            <format attr='background-color' value='#00000000' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-family' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' value='Tableau Medium' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5602209568023682' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk] / ([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk] / [federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]))</rows>
        <cols>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='Sale Distribution For Last 3 Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Sale Distribution For Last 3 Years Categorywise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016 (2)' name='federated.0efq9ho0rhk29e19r3sxy1qskrfm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0efq9ho0rhk29e19r3sxy1qskrfm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[Longitude (generated)]' field-type='quantitative' max='21167609.797796309' min='-18907406.887782186' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[Latitude (generated)]' field-type='quantitative' max='23337191.73210964' min='-8851577.8795738146' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='10' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='bold' />
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='#000000' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]' />
              <color column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk]' />
              <geometry column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk] * [federated.0efq9ho0rhk29e19r3sxy1qskrfm].[Latitude (generated)])</rows>
        <cols>([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok] * [federated.0efq9ho0rhk29e19r3sxy1qskrfm].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Sales Per Product Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sales Per Product Category For Last 3 Years</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontcolor='#000000'>Sum of Sales for each Order Date Year broken down by Category and Sub-Category.  Color shows details about Order Date Year. The view is filtered on Order Date Year, which keeps 2013, 2014 and 2015.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016 (2)' name='federated.0efq9ho0rhk29e19r3sxy1qskrfm' />
          </datasources>
          <datasource-dependencies datasource='federated.0efq9ho0rhk29e19r3sxy1qskrfm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' direction='ASC' using='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk]' />
          <slices>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' value='#f6ff9d' />
            <format attr='background-color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='#a7c2ff' />
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' value='10' />
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' value='#000000' />
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='10' />
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='#000000' />
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' value='10' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' value='bold' />
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' value='#000000' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#f6ff9d' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f6ff9d' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='right' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk] / ([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk] / [federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]))</rows>
        <cols>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales and Returns category,subcategorywise -Last 3 Years'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016+' name='federated.1u059781ylo89b15rtfmv07bs4ce' />
          </datasources>
          <datasource-dependencies datasource='federated.1u059781ylo89b15rtfmv07bs4ce'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column caption='Returned1' datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u059781ylo89b15rtfmv07bs4ce].[yr:Order Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1u059781ylo89b15rtfmv07bs4ce].[yr:Order Date:ok]' direction='ASC' using='[federated.1u059781ylo89b15rtfmv07bs4ce].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.1u059781ylo89b15rtfmv07bs4ce].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1u059781ylo89b15rtfmv07bs4ce].[sum:Number of Records:qk]' field-type='quantitative' range-type='uniform' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1u059781ylo89b15rtfmv07bs4ce].[sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1u059781ylo89b15rtfmv07bs4ce].[sum:Number of Records:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1u059781ylo89b15rtfmv07bs4ce].[sum:Number of Records:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1u059781ylo89b15rtfmv07bs4ce].[sum:Number of Records:qk]' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1u059781ylo89b15rtfmv07bs4ce].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1u059781ylo89b15rtfmv07bs4ce].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1u059781ylo89b15rtfmv07bs4ce].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1u059781ylo89b15rtfmv07bs4ce].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1u059781ylo89b15rtfmv07bs4ce].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1u059781ylo89b15rtfmv07bs4ce].[none:Returned:nk] / ([federated.1u059781ylo89b15rtfmv07bs4ce].[none:Category:nk] / ([federated.1u059781ylo89b15rtfmv07bs4ce].[none:Sub-Category:nk] / [federated.1u059781ylo89b15rtfmv07bs4ce].[yr:Order Date:ok])))</rows>
        <cols>([federated.1u059781ylo89b15rtfmv07bs4ce].[sum:Number of Records:qk] + [federated.1u059781ylo89b15rtfmv07bs4ce].[sum:Sales:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Returns 2016' name='federated.05zgy0a19n714x15i7efs13b96dk' />
          </datasources>
          <datasource-dependencies datasource='federated.05zgy0a19n714x15i7efs13b96dk' />
          <filter class='categorical' column='[federated.05zgy0a19n714x15i7efs13b96dk].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.05zgy0a19n714x15i7efs13b96dk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.05zgy0a19n714x15i7efs13b96dk].[:Measure Names]' value='135' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Subcategorywise Profit Distribution For Top 10 Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Subcategorywise Profit Distribution For Top 10 Countries -Last 3 years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016 (2)' name='federated.0efq9ho0rhk29e19r3sxy1qskrfm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0efq9ho0rhk29e19r3sxy1qskrfm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' direction='DESC' using='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' />
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]'>
            <groupfilter from='2013' function='range' level='[yr:Order Date:ok]' to='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]</column>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' value='10' />
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-size' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='10' />
            <format attr='color' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' value='bold' />
            <format attr='font-weight' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' center='0.0' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk] / [federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk])</rows>
        <cols>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 Profitable Countries Last 3 Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Top 10 Profitable Countries For Last 3 Years With Categorywise Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016 (2)' name='federated.0efq9ho0rhk29e19r3sxy1qskrfm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0efq9ho0rhk29e19r3sxy1qskrfm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]' direction='DESC' using='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' />
          <filter class='categorical' column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</column>
            <column>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='rows' value='10' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk] / [federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok])</rows>
        <cols>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5 Sales Persons-Profits by Category/Subcategorywise'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016+ (5)' name='federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)' />
          </datasources>
          <datasource-dependencies datasource='federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Person]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (Global Superstore People - People.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (Global Superstore People - People.csv)]' derivation='None' name='[none:Region (Global Superstore People - People.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Person:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Person:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Person:nk]' direction='DESC' using='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[sum:Profit:qk]' />
          <slices>
            <column>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Person:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Person:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[sum:Profit:qk]' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[sum:Profit:qk]</rows>
        <cols>([federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Person:nk] / ([federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Region (Global Superstore People - People.csv):nk] / ([federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Category:nk] / [federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Sub-Category:nk])))</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5 Sales persons-sales by category/subcategory'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Superstore Orders 2016+ (4)' name='federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Person]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region (Global Superstore People - People.csv)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (Global Superstore People - People.csv)]' derivation='None' name='[none:Region (Global Superstore People - People.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Person:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Person:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Person:nk]' direction='DESC' using='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[sum:Sales:qk]' />
          <sort class='computed' column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Region (Global Superstore People - People.csv):nk]' direction='DESC' using='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[sum:Sales:qk]' />
          <slices>
            <column>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Person:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[sum:Sales:qk]' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Person:nk] / ([federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Region (Global Superstore People - People.csv):nk] / ([federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Category:nk] / [federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Sub-Category:nk])))</rows>
        <cols>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='177'>
    <window class='worksheet' name='Profits Per Product Category'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' type='color' />
            <card param='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]' type='highlighter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales Per Product Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Profit Distribution For Last 3 Years Countrywise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' type='color' />
            <card param='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Top 10 Profitable Countries Last 3 Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Subcategorywise Profit Distribution For Top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Profit:qk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sale Distribution For Last 3 Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Product ID:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Loss Countries '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Countries With Total Sale Volume &lt;5K'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Country:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales and Returns category,subcategorywise -Last 3 Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1u059781ylo89b15rtfmv07bs4ce].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1u059781ylo89b15rtfmv07bs4ce].[sum:Number of Records:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce].[none:Category:nk]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce].[none:Returned:nk]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce].[qr:Order Date:ok]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce].[yr:Order Date:ok]</field>
            <field>[federated.1wijq1t0oihoag12wcqtn0p9p5ek].[none:Category:nk]</field>
            <field>[federated.1wijq1t0oihoag12wcqtn0p9p5ek].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Performance -Sales person'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Person:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[sum:Sales:qk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i90ynu0dqvs611cqe4um1kmdbjj].[none:Person:nk]</field>
            <field>[federated.0i90ynu0dqvs611cqe4um1kmdbjj].[none:Region (Union):nk]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Person:nk]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy)].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Performance-Profit person '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[none:Person:nk]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 2)].[none:Region (Global Superstore People - People.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 5 Sales persons-sales by category/subcategory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Category:nk]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Person:nk]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Region (Global Superstore People - People.csv):nk]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 3)].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 5 Sales Persons-Profits by Category/Subcategorywise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Category:nk]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Person:nk]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Region (Global Superstore People - People.csv):nk]</field>
            <field>[federated.1u059781ylo89b15rtfmv07bs4ce (copy 4)].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05zgy0a19n714x15i7efs13b96dk].[:Measure Names]</field>
            <field>[federated.05zgy0a19n714x15i7efs13b96dk].[none:Order ID:nk]</field>
            <field>[federated.05zgy0a19n714x15i7efs13b96dk].[none:Returned:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Order ID:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='No.of Records sold vs Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>2012</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[:Measure Names]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[none:Sub-Category:nk]</field>
            <field>[federated.0efq9ho0rhk29e19r3sxy1qskrfm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Countries With Total Sale Volume &lt;5K' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd3hU15n/P3d6UR/1jhoqCCTRe8d0MO69ZBPbcewUJ3Gym904yf7ieDeF
      rJM4juPYsQ3GlWKqRRO9F4GEKOoF9T6j6ff3Bw4wc2XAIEuy536eh+dB973n3PfcOd/Tz7mC
      KIoiMjI+imKgHZCRGUhkAcj4NLIAZHwaWQAyPo0sgK8g3W31HD18hJYu2w3c7aKuuha3PNTR
      K8oXXnjhhYF2QubGcZibeOWvbxKVkIha60db+TG2HChhSFIsp06cJsxPoKTBTFtzBVs3FeAX
      6OZHTz2PLSQGZU8zNWVnuFDXin9wKPWlhQh+4ejUvlsO+m7Kv6J01BahCRvD+LFjiFLV897e
      akbHuFi5IZ9PPtmIvfkC2wtLKemCsXFm8isVjBiRx9IZo9j83qvUOKMwWcrYdvQcW7bsRqXx
      7Szg26n/CmIIiaKtrpgeq4229g5UGg1anRan04UguOjqbMfhdBMUEkJQQABuFKAQEQQBbVA0
      43NTSR83ldpDq9FHjcBPKQx0kgYU1UA7IPPF0JtSeXBxKyvfWcHkuUuYM7SD/MJ27l6ykDPG
      Hg7XwPj0eKIC/dFpMhgZHIV+wRg+2XaIMROnYdAoUGjCCHO5yLtt4kAnZ8AR5Jlg36Op/CTr
      j9Tz2F23DbQrA86AC8DtdqNQyC0xmYFhwHOey+UaaBdkfJgBF4CMzEAiC0DGp5EFIOPTyAKQ
      8WkGxTzAhwXFlNe1S65Py01gdHrMAHgk4ysMCgEUlTdx7NxFyfXU2BBGpw+AQzI+g9wEkvFp
      ZAHI+DSyAGR8mlvuA5hbq/j4o020Wt0suedujm76mJoukaX3P0jtgXUcLKlnwuL7MHWdYdPu
      k8QPn8Liabn49hpEmcHCLdcAGn0Ii+99iBRDCzu2bqRGl8qySfFs2rmF/H1VfPvJO9iycgWb
      N+3j7ke/QdWujbRYRUTx0j8ZmYHklgUgCC7WvfUyLeHTmDnUD73BgMFopMfWBqIWrc4P0dGJ
      06VCq9WgVTpxuC6tAZLXAckMNLcsgOpj+aw/Wk9Pw3m6/dNpPrqZv727nbF5c4kLaeW3//sn
      kiYtJntoIK/++WW6QjMINQioVCpUqkExCivjw9zycmhRdONyuQFQKJUguhFFLi1xFkVcoojy
      s+XObrcbQaFAIVzpATgcDn69Yl+v8wCPzcth6WR5IkDmy+OWi2BBUKBSXVWRCMqrjR4PUCqv
      ssnIDALkYVAZn0YWgIxPIwtAxqeRBSDj08gCkPFpZAHI+DSyAGR8GlkAMj6NLAAZn0YWgIxP
      IwtAxqeRBSDj08gCkPFpZAHI+DSyAGR8GlkAMj6NLAAZn0YWgIxPIwtAxqeRBSDj08gCkPFp
      ZAHI+DS3fCyK09bN/vy1NAfmcfukeN5++VW6VDomzrsLd9UB9hTWMG3pPQSZL7Bh+2GSR81k
      1ph0+WxQmUHBrdcAgpKYEB1FVY3Q3UCtmMi3v/1tRgxRsy7/NI8/PIfVb61g3eqtLL7vAYo2
      f0ybrQ88l5HpA25ZACqNnvCwYATAiZFIYyMv/eq/2Hz4FLj9MAaEIlqbsDvUGI1GjEo7VoeI
      w+HA4XD0QRJkZG6eW24CWVpr2LhlN0UXVBRmBmMKDcVhbsfpDCMysIl//P1NYkfOJbr7GO+u
      eJuuwBRCDQJqhRpAFoHMgHLLAtD6hzLtzieYgoBfQABJCdE4xJmEBAfhzn2eti4rIaYQFO5R
      tLZ1YAwMRiN3vWUGCbcsAKVaR3hk5JULBv0Vm85IuM546Q+FhtCwsFt9nIxMnyKXxTI+jSwA
      GZ9GFoCMTyMLQManuaYAGhsbyc/P7y9fZGT6nWsKwGq1UlNTg91ulz9oJ/O15IaGQdetW0dm
      ZiaZmZlftj+94mxuxtnULLmuDPBHHRMzAB7JfF34QvMAf/3rX3nyySe/LF8+F/POAjo+/Ehy
      XT92LGHf/26/+yPz9eGaAggODmb8+PGo1WqCg4MZNWpUf/klI9MvXFMA/v7+pKdf+UxpSEjI
      l+6QjEx/cgNNIJGOtlbcLhd2QUeEKeDL90pGpp+4AQF08Ozt92KLVlJeG8O2gtfx+/L9kpHp
      F25gIkwNrhYwpRCigVv6rLyMzCDjBmoAI8+/9N8cKeugM0+L8cv3SUam37iBGqCFX/zg15y7
      UMEnf1pJy5fvk4xMv3EDAgggZ1Qkx3cXEDhlHMFfvk8yMv3GNZtAPZ0NHNh/gpx5jxA/rpOQ
      iGSc1wskI/MV4pp52W5p58Thw9S1NmF1uNH7NTNx9jh0/eWdjMyXzDUFEBg5lO//7Gluz5uG
      PiWTmhKbvH5a5mvFDQ2DRiYmMzw7mu72Tpxfvk8yMv3GdZvz3R02Xnp7BfUXTjLv3jiC+sMr
      GZl+4joCsLP8uWdJv30pf/3dn3EH5LBxzXK5DyDzteE6AnDR2dLOJ++vYvGTz7Bp+YdYwEMA
      1q4m1r75MhdCZvOTpan8Yfnr2FwuZj/wJOc3/Z2aTgeJ45cR1XmU/eca0ZrS+M5jS1HJh4PK
      DAKu0wfQ89zvf8Oyu7/NA1NH8/T/+x7e60F1/mEsmDsNcFN/9gD+2bN44t5p7Du0kQsXDTz/
      k2co2f4xxwobeOLZ72GoK6TZIuJ0OnE65R6FzMBy3T5AxJBslgy59P+FEfHXjkytxW63YbfZ
      0KiNiEITTocNQalHqXDhcDhxiAqUClAoLmlP3mopM5Dc8pxWV0MpK1bv4mKLkqoRdxPSks97
      2xQsfuARqoT3+ePLK5h+z4OEdpzi7ddfJXbMbEL1AsJnB6TLApAZSG5ZAP4RyTz54xcu/z16
      2NDL/0++4zGmX/4rmoxxt93q42Rk+hR5XkvGp5EFIOPTfC3WtTmrDtDzyfck1xV+4RgfWTcA
      Hsl8VfhaCMDVpaH7VKjkuiI4RN7AI3NNvhYCcDtVONqlm/WVSnn3ssy1kfsAMj6NLAAZn0YW
      gIxPIwtAxqeRBSDj08gCkPFpZAHI+DSyAGR8GlkAMj6NLAAZn0YWgIxPIwtAxqeRBSDj08gC
      kPFpZAHI+DSyAGR8GlkAMj5NHwvAwbHdW1m/fj1l9R20XyxjS/4uumxO7N3NbM/Pp6bF3LeP
      lJG5BfpWAPYmPt1RxvDhwwkLUPK31/5JeEA3r/5zA+//83U0wcG8/errWPr5LCxRFBFtXb3/
      E93964zMoKJP9wQ7u8y09NSyYeOnzFw8FmtPBLljJ7Nu/Ys0qk0sHjGCs59+QptFRK3rx3NB
      7d10/2V8rybjN7ch+EX0ny8yg4q+FYAmlB8//xxNx9ex63ArIvU01pxDCErH6KygvqmZRrue
      AL2AWqUGwOFw9KULvSKKArYG72N9L2Fwyd0gX6ZPBaDWqDm6YS1NrmDuWTwJy7BA1m87x9NP
      3YfB2sBHn2xh2TefxK+/z6JwK7BUxPZqCnIp+9kZmcFEn2ZFpdaPucseuPy3f3IOjyfnXPrD
      EMuDjzzal4/rU3o2/xSxs05yXTPhGVSxowbAI5n+4GtxLlBf4G44jbu1XHJd7GkbAG9k+gu5
      ASzj08gCkPFpZAHI+DSyAGR8GrkTfIO42ttx9/RIriuMRpQB0oN5Zb4ayAK4QdrfXYW5YJfk
      uv/CBQQ/+EAvIWS+CshNIBmfRhaAjE8jN4H6CMfZTdj3/1lyXRGRhX7eSwPgkcyNIAvgM3pq
      InHW2yXX1WY96hsIL9q6cLdVSK4L+kuL8Nxd9dgPvCINKCjQzfr5F/RWpq+QBfAZ9pZAnE0m
      yXW3TdMn8YvWDhynP5IaFCpZAAOI3AeQ8WlkAcj4NHITaBBhP/wPRFG6U06ddTsKYxii3Qzu
      XvaTqnQIqr5pqvkasgAGEbb9fwaXTXJdlTARjGH0rP0OrprDErt2+n+gybmPhrZumjssEvuQ
      yGAMuhvpyvsesgC+Rmw5VMpHBWck1196YhbpCaFYt/4CV91xiV0z6nHUmYv7w8VBhywAH6Ln
      vA37Gel6Jr84B+rMAXBoECALwIdwtAdga5QO9eot+gHwZnDQTwIQ2bvhHfYUX8QQkcG3H1qE
      UuifJ8vIXIv+EYDLwuFjdTzxo+/z3m9/Q1PPIiINV8xDVHU41aWSYGHKxH5xT+YSu05Wsutk
      peR6ZmIYy6Zk4La04m4okgZUaVHFjekHD/uefqoBBBQKNy6XC5eoQOFV+t9pLMAVtEcSSquN
      Bcb1j4sy1DZ1crikl5Mx1JeOjnE3FtOz5imJXfCPwu/f8hGdNhwnVvQat3r4vQgaQ6+2gaR/
      BKDUM3PacN587RWiR84gzHebnF9vnDZsu3/fq0mVvhBBY8DVVAJO6VCvIjgRQReIu72q15M4
      BGM4ioCoPne532qArIkLyJq4oH8eJzNosW74Ya+LBnWLlqNOmYXt4Ks4i9dK7JpRj6Od/AMc
      5z7Ffug1iV0ZkYFu9i9xt5bTs/HH0gcrVRjvexcA87v3g+vSiYQDMgokiiJO56UZT7fbjZCx
      DGXsuMs2QbjURhIj83A4HKiysvDTav8VGD6zqyMjcDgcCOFh+D1wv8Su0OlwOByIguBph8v3
      uDUaHA4HhoULcJvNkjiEmGgcDgeasWMRYmOlPgxJvPSM8GEoJ/1QkgbBGH7Jrg3xtCOAAKC4
      fDykcsL3QHSBCCJX4nDpQ3E7HAjD7kaZOFX6niKG43A4yE0Jx18n/UlD/LU4HA5006ahGjZM
      kgZVWhoOh4PhSWHo1NmXzHzmHhAd6n8pDQFxvaYRtfGzNCg97Jde82dpUOhwORwo8h5HsHVK
      0xCUdOm3TLkNZUiq1B6eicPhwO0fizB0gdT+r/esMnra//WehSvvWUidC6IbRBDEf3k6QDgc
      DtTqK7OUbrcbhUJxS3ZBEK68eJcLQRAuh/H+YURRxOVyoVKpPOK4VR+uZff2we12I4oiSqWy
      V/vNPMMb+T1f8hHweM8DPg9w9Y8MeCSoL+zXe15v9LUP3vbefLj62vXsN/KMWw1/LbvodiMC
      ims8czC+597+HvAa4Go6GyvYsH4XuTOnExIYSniQZ2+5u+Y0pVY/jm35kPRpDzE+y/NYc7fD
      QkH+ZqqbugiJy2De9DEe8w2iKHL6QD7Hz9Wj9TOxYMkCr4N6RY7tWs+xcw0IgoY5d9xNXJDO
      4xnnjhRQZtYxcWwe/r2sr+lpKWfV6q24BQUx6aOZO3G4h1102Tm4cwvnatrwD09g/pypaD87
      n9fW3cTaj9ZR32nGaDBidyq557FHCfFa59ZcVcynO4/gFNRMnLOA5AjPUymqTx+kyu7PmJwM
      1N5DbkBrTQlbdhzCgYpxs+aTFhXkYXeYm1m3bhNmh5uU3KlMyE70sHfVneFApYtZ44bRWz4X
      RZFT+/M5cb4erV8oC5bMlxyI3FRZxNY9ZxgxOo/4hHj8tJ431J49yMaCQhRKJblT5pGX6tkB
      tjaeo7hdy7mCjwnLWcrM0UM87DZLK2XVnaSlRHHs4DGyxozH4OVDZfGhwbQc2s2+bVtwdbVQ
      WVvFiWLpeHTlyf2cPnWK4Mxczuw7JLG3lJ2g0uKiua6e5roGpMq2sGv/STqa27A0NyBdd+ni
      bFk9t81fyIIFtxHuJ11hGZs2jAidlT/96if8529epqyxy9OH8ycJHjaVBQsWMGZYsiS8ubmC
      U1WNNNc301l/EfdVGUitD2Lm/NkoRDULFy0iXuOiW/L9Dhe7t23H0XIRm0pJa4dV8ozwIem4
      m8/z3Hee4e/vbaDbfnUkbvZu34qt6SJ2rYbmVuniuXMFa2l1qkHpoKysRWJ3i07eeumnfPeH
      P2L5G+twevsodrP7wEnam9qwNNcjXb/qYMunBSi6GqgoOs6Zhm7JHVUlRWRPXcCCBfNJi5XO
      Xl88c4xz54twhKRQcdxzfZMoiiiUWiqP5/PzF16kRRF0uZC5go38nQcGkwAEIiNDKDxbwuZN
      BcQkRkvuSJs8H7fFypRhaYyaIZ0fCAiNIjYugyBtJ+09vX13QE9yRibJMWpqmrp7EQg42mp4
      efkfWL78r1S2STNXZdFBNm0/QNrUO/npd+7m2B7P1ZmaoEC2/PNPLF++nDXbj0nC6/xCSEzO
      JCrQRlOXjavrX4VSjSksniEmF2/+8y0OVJkJlmhQQVxKKiPHD+N84XnEXlLRUHqSw0U1PPCd
      HzMnM5jCkuqrrAJxyWmMmjScc8fPXunpXkVUSiqpQ9NpqqkGQfoFnYCoofzop89x190Pc/us
      MSi9c5FgIDkzi+QYFbXNZqQxqEmINHL49Cm2Hq8g3iSdH1Ao3bzz59+xfPnLHDxTK7EnjJ6F
      paaSsTmZDJ882sPWXHqUP/x+OYfP19HV0UHlubPYJU5oiQwcZGuBLDaBx37y3yRGBqPX9OKa
      KHKx9BR/+L9i7n7y+x4mt9tOsxlCFGYM4+ahD4ruRd1WmspLiR8zix8uS0MveYSKB5/5KXUX
      G3GLAmFBWkkMwaZwtAqRC8f3cDwmljuXzfCwh6dP58VfpGB26wgKCvIK7aSpzUK4QYHfiCmk
      6ENR95IBR0+5Df+yWtS6AJRuPLYtdTY3EhwZT3NrB4vmTyMxUnooV6ApDIWji4INa3n02WeY
      4JEMgdjYaFas3MIdDywlJizQ8w11tWPRxqAXmxk7YRaRQzybFgBt5Sc4WlmPq6OG6mIVUY/c
      i8bjZdsw6kMYP2cWunUbcLnwymlu4lJzWWCIQaULQOvVlje3NhI5bBoPhWUDAjFx0hrA3FLJ
      xcZWjhedRUsAozPiLtvCUkbx7Lej2LT7LIsXzPicZTd2lOqQwVQDiDi66vj5j3/Iz3/2cw6c
      rZfccXb3ZsY//Dw/+8kjHNq029PodtLZ3onFbMZqtWN3OHopG/Xc8eD9dJ8r4KknvsPrqzZg
      tl9dQbtY8Zf/4Y8v/j9++/LfqGiV1gBnTxwmJTGetJHZdLVKV1a2lOxg+d9Wsmv/flZ/uNXL
      6qajvQOL2UxPjw2H096LjzZWvr0Sp8uN1dIjKT17ujqw9Fgxmy04HA6cLmn5WnZkFx1CNDGh
      IYiSX9jNgT17SQz3o6WliaIL1R5Wp9VMe3sbHZ3d2B0O7A5pQ9FoiqS9+jyH9m6jXRuK6qoM
      5nY56bG40dmree67z9EVktJLLSZis/YgCgqKjuyj2ex5GIGtu5NuqxWz2YzZbMbulDaiuhrq
      CU1OoaXqPDXNHRK7KIrsW/0a3/nuD3jpTyuwSJKhZuyUSYOpBlAwafE30IZloDAlMTItUnJH
      0pgp/OWNl9kvCky943HP0CoDSYkRHDywG4tTgSlBxcjsoV5VvJX3//E6QuRQfvHS/TgqTlLb
      biEt3P/yHfrQISy5LYoth5qx9vLjJ2Xn0uFQsu6TrUyYlyFNhqhArREo3FdAbI73xJ+G1LQk
      Pnh7O9VtdobkTkclyaACPV3NFBYWolD6kz1h4lUdSDtH9u+msv1fM6kqooaOIDrY6BFD4vCR
      DO0qpvhcA3MlDipIz0jhzbfX4Ky38K0nnvCw+oXFENJcydaiIkxR8SQP66V5og1mzsx55I22
      EhQURLvZRojfpWrG3FLFqvc/weJyExxiov58Ed3jswn0GC8QuVh5nsLyZpqr670KIQiJT6H7
      9G62FxWjVKrwj0kjKSrY457InBlktn5KhRDNtNlTJT7qg2L51f/9lbZOC0q1Dp2kD+Bg3Yo3
      Ub7wwgsvSEIPCCK7173NRXcwLWcP0K2NJe5yxhQpLzrKsZJqTGHhhIWHYQqNINLk7xFDV80Z
      atzhLJg1hdQhcRh0Wq9RCiVKhQsEgY62TjLGTiLSX3v5GU6ni7j4BMLiUolNSCAp2oRGrfaI
      o/bCKY6VdzJv/nyykqNQXdUArrtQyPGyZkRrNy6Vkbyxo0mM8qy+e1qqOdcs8OC9SyjavpXo
      rGz0KuVVzxCIj43ChRpTaBhDkpOu6sApiElMJi0pHpVKgyk0jNj4eMlolKW7mzaznajoSJKS
      k706gCKi241SH0h8dBTRMTEEGjybevqAUEIMcHTPVi66QslL9/y8VHdtMWt3n8KgsrFr1yGO
      7T/O8Enj0ClAawwmb/RYAjUuAkwRhIdHkBAfh1rh6UN9VTmdNgiJisLd3Qr6YEwBV8R25uAO
      4scvYWJeFtHhIWhUVxLhdjk59elq7EkTmTwimq0bDzF8RJqHj9a2Kpb/4Q988kk+JdWtjBs3
      0quwURATHz+YagBwuUWUKiWiQoXbq/I3+AfSfWEjtsz5ZPg1c/xoKSNSPTvKSoOBo5tXcGKX
      kaih43nywYUe1TPY2LZjH1PnzEWpNkjahhdOHuZ8eTlltc0A9HzSzei59zMz70o7OCVnIo2t
      G/nbH37DuNuf5PYpV2oBrcEfZ90ZhJgxzMlzcLSojGl5qZ4+ajUU793IqSO7aG1spaiujWf/
      43kiL4+2Oln70Yc0ttlw60IYPXPmVaEFjP7+5L//GidOV+GKiEMTNZSoIM9SWqM3EhYeztHd
      +7DOno1nL0Fkb/4G9KkTMemV6Hrpa9WfP05hjZVv/PCXhPjrJHaFSo3NasegN2EMjiM5wIHN
      Bfwrj4o9bP50N1Pn3NbrewaRipoGhg0fQ8XxAzi0SRi9RKxUiax85fcYdFpm3fk403MTL9t6
      2mp4f/U6moxHiQ4JYc6dD0l8dLtcpI6eSfC5IzhFcACeKbGzfd2Hg0kAApMW3MWJY8dRjJrJ
      iIwYD1tEfCpTZ0/mtyvzaTb24J+xVBKDX0gsmalxlNZ3oJK2LQCR6pJjrGptRx8Yx3eHpnuU
      ji6nA5vNisViAbTc8Y2nMKk8X1Hx3o1s3H2KMfPuY+54z1LHFD2EqbOn8+JrG+kOBCFqosQD
      rTGUzNQETlW0MOH2h3lw3gRJLRWWkEFyQgtb9zdglXQSBPxDY7jttnBWflqKzSY9zKux7CSr
      PtxJW5ONeb0MddktLWxetRI/vZ47/u0ZwgKuzLe0lBdztqaJ0qJiSosOkz15MQsnZV15g6KI
      X0wG9y1UU1rbzP33z0AjOAjyaOeLVJUcZVVrG4bAeJ71es+gwKDooWDPXtpqG3hs2aNEe40E
      peVMIOZgLVPuWkqA0VPCxtBEXnj57zS3tmDpsWMI8JOkUR8SS06KjUaDky5lFHpJdlDQ3GUf
      TAIQObrtYzafbMBltaL71ncZFufZ7gtJHMnsMW00mV1kZkj7CE1lhQQNG0eyqgiDWuhliE/P
      D/7jPymusTE0KZJAjx9NIGvsVDJHT6Sr24woChj8/FB7jfENGTGJhQSwffM79Ig6Hrotx8Pu
      F5PF4qkXsRqjSEpMkvjY3VyFGD6cX31zKh/8/R06XBMI+uxXcDvtNDU2MWX6DES3k7RxENnL
      6oZhI0ZwoqSSaRMDSI2Rfv41KCyGEbkjEV0OjhfsInjqRIyf5UCbpYeZ936X8T1WQCDIdHUT
      zU1jcyPNHVaSki75Hhbsmblcjg4K8gsoPnMGsxPOX7Tw8B2zPV+1YODZHz1PcUUjGn0QOq/m
      j9ViYdLCB0hvbERpCCImUFrLnNi7k7SMVFrbW6ks6yI90fM7zy3F2/jdh4cQza3EjLydHzw8
      y8Nuaa5g5Xvvk5qahp8pEJfI5daA3dLGrh07qWrtHlwCMNsVLL3zPty1Jzh9vJCogFGYAq90
      8M7v+oiTFXZ0CjPHi+okTaCQmBTCnWZsir10uJN6GeK2sn79ZlzqMJzVRajufowYj3fvZuOK
      P7Pj4Dns+mC+8+N/Jy3Ms2RqqCzF7RfFM//1v5gCpOu6647nc7y2i9BgqDxTxSOP3+5hN5ri
      0HVt5aX/PU5qzjT8r/oFHNZO9u7cStdnUxgKpQFTfILXTLDIgYJtBKRNYEi4Er1G+pnXiyUn
      MaVPwnJoE5auWvadLGf2mBQAmsrPUtbcSnlFLaBi3Oz5DI3+V0EjEJU4FK0p/nJcfsGeAlOq
      /BiWk0fa8DwA1Ho/aRNHNLNu3UbMdhX+gSGMmeJZE9aWnqWitpaahjZAw6yly4gJ9OyHZOSO
      4tXXVmI+E8Yj3/qOJI1KpZpJty2mdP8a+NcixqvQ6P1x28w0NjVhVwR6zbeoCDaFsWjRosEk
      AAgJ8ufTNatwu12oNHqOhkcwZ1z6ZbspOoZhxhBOFKxGZ5IOUToddvZtfJcep4IIf9elRHv8
      OFoMqh72Fx6kITGX6ZJhfjddBLFoRi7nG5WYbXbAUwDWribEoET0KhGH04Va5ZkBg6LjqV/7
      Hqcamhi75Emv+B1cOFdKQGgs6f5u/A0CLjeXJ5K0fqEsu/9+dmzdzZSZnzd+LaAS7ORv2oif
      TsdCUxwmr3Z6ZGoKa1auxNyj5O4xI3Dqr5TisVk51G7+gLq6OswdnaSMm8XQq+IOCotC5Sji
      pZffxinCgke+T3jwlcEGt9vG4T07aOlxUl58jDpFGn/+9bOe8xmCjoSMbFxtlZyqMOP0aIYJ
      JGfnoVSKXBr9VKP2Sqjb0U1RaQv3f+Nx9h0oIjRQOh+DNoDYuCSmZD6D2iitBe093aTkTGb2
      lDEo1VqPeQqV1p+R4yay9YNXB5MABESXjeaqSpz+wdzx6DeYlO651ic0cxrhB/aSPWYeM6dL
      29fOnk4Sc2YwMScFlUbvlYEcHD98gruf/A8WdLRRevo0PXbQe7xbFeNHD+fIkUPUmVXcE+45
      ygQgKEQ+eO237AgNY8ayh5mWk+hht2Ng3MRpJGfmkBoXLkmj0T+Q+MRkbG7Q6AN6mYgRKd71
      MZt3HSIxOoq7H38Ek1cNoNCH8NDj9xOiVxAQHCiJQW9KZu48NWqdH2mZGeg9NCowbMIcEnPt
      1JYcobNbuhSi4vh+Zn3rP5kY3sA/Vh1lUsb8yzaFUk9q6hAajpUw6rb7mTF5rNcIDwiCiqVL
      lyG6HYyvquml/e1ix8495E6ahUqhRO8VQdXeNZxpDWBL/rvMnJnLzt2nuGtunsc9CqXIyz//
      Cbljc0jJnsTCqSM87EqtlrKjO/nzqcOExA7jW4/f5fUebFR1qAbXMGjh0SNkJq15p4kAABI0
      SURBVEfhPyQbg9qPIV7t2/JdH7C93kCcqoqC03ZyPTrKYGmu4uP1+TQ1XKSxG9KS467afqmg
      u76E1958j5OHD6GMHsaIlBiv7ZlO1q5aQXT2RCzlpwlNzyXU6DmLIzgsnC4pxaXQMnH6DEK9
      1gupVGq62+vZ/sn77DpnYWLe1R1lBTqVnffe+Senz5Zysc1OdnaGVwYSiIyJQaUykJ6ZTlx0
      hNdIlkhTZQnbdu7j1KkSTInphAd6NsU6GiopvlDJvoK9ZE+YhMFrGPTUnk2s+3QXVS12Jkwa
      R5DBMw1BUdFsffc1tu0vY8E9yzBd9Q6ctkaef+rblLdaqTxfRHGtlXEjs64qbEQcdjsOhxOX
      S+TYlrVoU/K8Osku9m36gIJDpzhVeJa0UeMxGa90dmoKD1MlGjDXVhIYHIBd8Gd4+pVmmeh2
      I2j9GZGbQ0pyEvGx0QT4eb4DpVpPcJA/oRExJCQkEBcT4VUgKsHlHEw1gILRU24DhZvKjbtJ
      nzzlKpubM4d2smPPERr9hlEdasPmkM7+KZQK1BotOp0Orca79+iiqrIOha2Vsg41wdVlmF2j
      Cfws84luK1s+/pDCsjqEwLN0m630OKQzkCUnjnHv939BhPk02w4Vkb54rIe9o7qY1eu3EpmS
      x+N3zvSwOe1WmhsuYkodxwPTxqBQqnuZoHGxZf0ndDoDENobCc3IZojHb6tgaNYIjp+rQx2W
      QHy4dCmE22mnu7sbsauLTheEXmVrKT2KOm0aUWf+xrn2dnpsnpN9bnsXmzduJXviTE7t3YPD
      a6ZZrYvgjfU7Jc+8goOPX/sdB0svDSULyiB+fMfVdhFLl4U7v/lDLFYHIBDhteQkfvRUYg8X
      EzN5IiAwItdzwtHcUsuxE4WcKDqL0w2JI6YSGzHS857mCnYeKmb8mFy0RkMv/UE3J3ZvGkwC
      EKk8vZdNh8sRHRb+9vIfWfbIkwyPDwIETNEJDBmSSnz8CGL9BEKjpWtUDOGp3LlIicMN+oAw
      r0QryBw1geiMUcClEsKjShRUJKVncXtEIkZ/P4YPzyElTDq8ljV2Im+9+TscykDuevhRiT0k
      KZeH7nSxZvWH/PENkV89e9dlW3t1Ee+8v4kOs53Ks8cJCE/j8Ufv8KqaFWhVIhUlp6moj2ey
      ZIjbxd5de5h916N0Fe/i6JkapuUkeNyh0hhIzcgiZ/QkEr366WUnT2CYPpyY9PGM9HdSUVlH
      esyVZlTDmYN06CI5v+FjJt9xO/s27yHzsXmSdH4+Gu55+t+55xp3NFSXUV5dS2NbN26XgqkL
      ozAEXnkJAVEpLFqc8rnh/cLiGJ1j4/DxUzhFAVcvy0EUKgUlR/dwsaYcU/xwUtJSLk+EuZw2
      LtZW060OG1wCuNjQycPf/j6usgOUWRUc2bKH4d9cCAiExyYzMreaF9/YwPSpeQjGMGLDvdq/
      Tgv5G1bT1GFj6MRFpA65uomkICo+mc/bVi0IKtKGDaf47dcJnbKUmBA9Oq8h0K7GSk6cqyc7
      dzSiCE5rD96d5ObyQvIPljD7vu+RnRbnYQtNzmXp7DYKijqYMWkYu7fsxi6CZx51Ejkkh6fn
      PYSys5HPdhp6pCM2Oog1763A1ePgzm/OkaSlq/4s3UI6GVEmyUBAYnY6r7+1gunjM9m8dSvT
      HnzGI6zD7qDibAldTS0cPHgUh8O7H3M9nJw7e57qs0W02UGtD2bmbTM99gOYIkys27iLeUsX
      UrZvB/WdVsko0PVoqywha/b9jBsSgEojHUbVByfyg+8/TXWXluTYMI+a1tnTTsGnWxAEcTD1
      AQS0yh7ee+ddCivbGD8qE3VwHInRV1ZUutwiAUEBaNVqgkwRhAZ5ltBtFadoMgzl6ceWcKzg
      ENkjh3/BA7jcVBbt573Vn3LiRDHxw/MIMVxpSrnsPXSYrXQ1lLNh46cEJuUxNPZKP8VpbuZk
      tYVZI+N547W/4w4bSrLHZhM7Wz54lyNnymlqaiV9/FTSYr1rKitrVq6iorqOpvJSgnImEn5V
      3nBYOtFFZjAi3g+7IZqRWUmovDa9dDRW8/G6tRw+VEzG2PEemc8QEkd8kED1xVZGzVhAVoLJ
      4/m6QBNBfkaGDs8lJiKKkaPzCA74YseZuN1uVGodUbGxRESEYwoO9Pgdzh7ZycbtB2huaUEI
      S2byqAw0kjXV18bSdIF/fvAp1WUltDkNDE30LNosLRWs3bqHhottdNdWEDNsxOX5CJXWj+Ej
      R2NtKhtcNUBtxQXMdidqsYcuIYypIz1LH6VoZffWfHpcTnJmm0hP9BwlCkrIQrnvLX7zuwLG
      TJ/v1Xm8EZTED0kl5JyVqbOm4ue5xhcFTg7v3g6mFJ772S+IDPNc59PZVENTu5X9p/ex9Oln
      Kcw/BLmezZPMScuYs0SLLTAGc9V5rC68Oqlqpi28h+ysWD58Y5XXIjI4vXM1Qu7d7P1gLSHR
      8Rw9l8CEjCvzIR21JWzYdQpTSBhDR80g3KtwFAQFCem5JKTTK1q/EPJGj+3deEMoCA0NZvO6
      DSy45z4MGqVXISQwfMpC7rMZmTBjFpqbPCJQQCRlWB65CQEERUZI7Bp9AM6uBk6crsEycjYL
      JH0tJxX15sElAJtTyV0Pf4swoxL/wGDJHWWHd5M3ZwEKZxsdrZ47sUSXnXdfW875BjtZI8dw
      4Vwp08dmfcH13i4Ona5kbFooTRXn0cWmEuF/pfhtLD1JSXULfs2dvHr2BDPv/AazRl6Z7Q2M
      iKdtw+u061OYGeSiMibeK34bpwrP4p+io8EZQNvpQkIzcrwE4Ka9vQONYTi5mSmS2WydQU/+
      6jcQ4qeSm2Cjwe7ZiTWGxrPs7nsRRRcb31pJzahs4i4nwUH+R+9dtdFHycS5S8iIlY6j3xKC
      i7bKk/zi52eJjE7hyWe/JVkS3XR2Nz/deYShCdHMv+deYr9gE0gfmUFs+UkaGnoQjFIBuN0i
      aUOH4x81goVLFqGR6Eygsfz0YBIAGLRKPnn/LZQKDXPufJARQ64evxBJGjUZV7uGg5t3kTTJ
      s5vltLchBg7jZ98cz3/9+1947pc/QzpHej1UTBqZxpvvbcQvcSRzvDabxI9ayMujFn5uaKU+
      hMeeeg5REBAQWTI7zusOgVMF77N1sxObbjWBgbFMuOtqu5NP/vFH/m9lAR+tTcUUncHzXit9
      0yYuRhVVRVRCMqK1k3iDZz/Ibumg5EwRTrebhg6r1xCrkjHT55Hd001lZTV2l0CQ8YtlvOsj
      sm3zNr7501/yyv++iFnvj79kOYeCSfPvwVBcjltUof2CtUBbVRGFDQrijUrCJ83iyMadMOLq
      7aciK/7xColjFpEVWM9bb6/h6W/d6bX5SCQ4NmXwCKD+/Blc/pHExboBJXqvTZw9TRf43Z/+
      iTEsgubKOkwjPUs+QaHiwqEN/OjoDjrazbyx4hO+/03vRF8PB+W1HTz5/C/QtJbR0mXF32S8
      fjAPPxSfFdpCLxvG/fmfN9+/RmglM+5+ksTcuQSEBCMIKrz3kijVelKHfjZ3q5OW3G6Xg67O
      ThyikmVPPeW1lkhBYEgwe958k92HzkNUPHODhxAV/MXSeG3sVFU3kXB6H3ET78V08QQXbRDn
      teRk89oPuVDRiM0YTurYyYT1sv/683A5rNRUNaFrOI8lLo16yYaYbmzuMJKjQ4AgTKfz6XYg
      qYUSI4IHjwACwqJIDQ4jJjYJEAjx+lGaKyuYdNcTtB1cz32//iVbV+2EKVcmmVRaE7/80+u3
      6IWLygvnOFtajkYUyFryMIlfUAC3hpuqsnIaqkspLLahUBqYu+x2NF/g60d+ofEsWurd9Loa
      AaMpiiWLw/mgoAp7j3RJya2hJTc1iDX7a3jw8VkU720kTFLJKPCPSGJ+cjQfba/G1suOr2uh
      Cwyh5cImOqxOzq5ZQ1zmJK871OhpY9WqVYCIIWQIWo+a0Mnxg4dobmkbPMei1BzfTKXfGDr3
      vM6Gog6e+O4PyY67MoJSX1zAL5a/TVdnF4bgYDLHL+N7D0uHAG8NJ6dPljA0fQgfvPIn0u98
      irxY6UTTl4udNW+9CWGpZGWkMSQ+ppddYzePw9qDxdqD1Wanra2D2MQk/Pr480lXDqT61wF0
      V1eFIj3dXXR0WxBw0dbRQ2JyErq+TOR1cbJ93Wqic6YOnhqgqboWhrZyqjOMf39sEqer6z0E
      EJk5lVf+Jt361neItNfXcOHMET587w063OHM6GWZ7pePmonTp7FuzRr+mr+D5379S6L70I36
      80VcaGqmtKwGUDLRL6zPO8Geh3xJ7flv/5YN593kZSSgFDQYI2Il5y9dF9HJyf27qDGrmTZ1
      AsZeVsV+Pm5qy0s5eXYQDYNmTJnNm2+uZvaS+3Haa0lOjrl+oD5m77q3ONAcyuK5c2noCSDC
      fyC+vOhg8+oP6RBN3PP4MsL72IW47DxaD+wm58HHCdb1Z6l7hdkP/YCUc8UcKy7DZnNL5jFu
      hLqjm9lZoWJCbCdvrtrB0177Aa6NQFBUCsuWLBo8E2EqXSCjxo0jKthIYGjk5U3W/YdAat4k
      hoZr2LdnN4WnzpOSO4ZgQ982D24ElSDQ1d7ApjWbyZ45VzIXcGuInN2/gb+s2EJ9TRWG8HhC
      e9nX8GXS1XyR0so6Oju7MAaYGJKa8oVK8AvHC1i/eSuV7Q5wdtPVo2PC6M+Z2OgVJUOzMtGo
      VIOnBhgMCIKS+PRcvpWei8thw63o/8zfcrGKLpeWcFMQM+97hLg+/6aEQMaoKcQWvUurXY0p
      sP8/WrHj/b/w108vMCQ+CpXCSNak6b2ewvd5hMWmMP32R8mur6bDbCcradhN+yIL4HNQqrU3
      MY9wq7jYvnUb0+fO5fXd+4nQNlE7LofYPq0MRY7v28OoBQ9hK93H6QsNTMu51qhRXyNwx/d+
      yx3fu/kYAsNisFQf5Y1tRxDNrUS36RmTJV0ceSMMooOxZEDAqLDyt1deJXvmHYQYdL12Im/1
      GQajlpLTx7lQ3YqhzyfC+geVSsPEOYuIjAjodUvkjTJohkFlLuFy2ujotBIUHIDFbMHoZ+zt
      +M5bQKSztYWOzg5QGwkODsbP8NUTgbmlDovGhMrWgdoYhJ/+5kYL5BpgkKFUaQkJCUQhCPj1
      eeaHtrrz/OX3v+fEhWoOfLqGfaerrx9oEGJvr+LD1fmYHW7sjt4OQr4xZAH4GDaLGTQamuvr
      8E8YwfgRiQPt0k0hKnV01ZzknX/+g40FJ286HlkAPkZkSg7zJg+j+OA+tmxZT2GF9Pz/wY7b
      aaOp005kWCA1ZRVoDDc/kiWPAvkcIrX17cyfkkNrUAqOrpvvQA4UHXVFvPjiy9zx1LNMVgcw
      b0rO9QN9DnIN4HMIjJo8i6xJM7hYco7kJOkJe4OdoLhc/vynlzBfOMD2PbvZVCD9EMmNIo8C
      +Rxujm1fx+5TlTisdmbe8xi5iaHXDzZIEUUXZosNP+PNNYPkJpDPIZAxZgYJIxzUlhyhu0v6
      kY/Bjt1qwWK9ciiwWnvzSzlkAfgcIsd3rmXzofO4UXPX46MG2qEvTNnJvaxbv5l2fSyxfnZc
      IaN45sGZ1w/YC7IAfA6B2NRspupjAJHm0pMUuTPISvq8A2MGH+ljZ+MnmtnZk8KiLDXvrDlz
      03HJnWCfQ+TsySM4NUYszVXUNPeg7e2DhIOc2LHzCazcwfK/f8L0+dNuOh5ZAD6HgEGn5OTR
      IxSVVJCcnUdKbNhAO/WF6aop5GR1J+nDMjl79NRNx/PVk77MLdHT1cmoBQ+RWFWFJiAY/S1M
      Ig0kXY2NhA5JoqmiBPy+yF4AT+QawMco3PwxlRYHBXuO4m46x74TpQPt0k0ROWI6w6P8MUUm
      snTJzW+VlQXgY7ic3WzfuJ6jRw+zZft+er7YgQyDArfLwYlNq3FE5zBnZh47Nuy46bjkJpCP
      MXTSHLqKKxgybyagJDO9PzfD9A097bWsWb+RRr9CYkJCmHXHAzcdlzwTLPOVo6uxkv37DnC4
      uBSFIJCUN4N7bru580xlAch8JRHdThrq63G4RHR+QYQFSz9ndSPITSCZryR1x7bw1r5aYoP1
      RKeNZObYzJuKRxaAzFcSrV6J1hhKTEwQpiDpl3xuFHkUSOYriS4ik6wYPTabDadT+omkG0Wu
      AWS+cpiby3l5+Su02S+dQzrj7rTrB/oc5E6wzFcbVzN/f20X//bkspsKLtcAMl85uhov8D8v
      /p4WGyhUambf9dRNx/X/ATv/jV1sAL3rAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Loss Countries ' width='192'>
      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
      cAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='No.of Records sold vs Sales' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Performance -Sales person' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Performance-Profit person ' width='192'>
      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
      xp6vW9/CAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Profit Distribution For Last 3 Years Countrywise' width='192'>
      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
      HVUag9kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profits Per Product Category' width='192'>
      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
      pwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sale Distribution For Last 3 Years' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Per Product Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales and Returns category,subcategorywise -Last 3 Years' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXQc133g+2919Y4G0Nj3fSdBEADBTdZiW7JiOfIuObaVcZxMnLx3zrx5
      cyaZycvMyfOcN5PMzDvzkpM8z3H8siiKHVu2JEt27FiyRC1cxQ0kARD73li6G73vXdVV9f6g
      JMoxAYJkA90U6/MXlupbPzTq13XvrarfFTRN09Dp7lGGXAeg0+WSngC6e5qeALp7mp4Aunua
      ngC6e5qeALp7mp4AunuangC6e5qeALp7mp4Aunua8f3fhEIhJEnKVSy6PKNpGoIg5DqMHSXo
      9wLpNrO8soYkWLe9fXWpA4fNvIMRZZ/xRj/UMin8sQxlRRb8wQRlZcXk4nNgeXqEFV+Stj37
      qHLacxABuGZGWfEnaOnqpbqk4AZbKIRCCZzOwl2PbafNrwf5sxdHt739//HUhzi6t2EHI8q+
      G48BRBOu2Sm8ay5CKQUpGcMfDKOoKuGAj0gsyW6cNhKygcGhAcodRlKygixLKBmJRDxOPJkk
      Fg7jD4bJyBJLS4tcuHAOfzBCKp1G01RSaQlJShOLRpBlCb/PT1pWbimGuCSwv6+LlfkFMplr
      baSkDHI6gc8XIKNmWF/fICOlkBWVWDhIKJogEQvjCwRRVJVoKEAoEkdTMwT8fpJShnQiii8Q
      QlFv9k5mmLx0jjeOvcbY3BojZ9/i56+8ypIvyszY25y6OIWakbh89gSvv/YKc+7Y7b/hWTIz
      /AZf++yvM56UAI1T3/tTPv3VPySS68Bu4IZnAEEQ2dNawSvnl3jsYw2c+McfshaWOfDQfYyf
      GaZr6Ch72+t2PLiwd4m3/WH2NpexJFdQprkpsBm5MBagf6iOiXPLWAqgs3cfgYCPSCiIPxDG
      5fLR3dnF2OQiJtmPaq3EmFhndHaFirZBHjmyZ9tntMjGMmc3NiipaWPu6mWSgoXE4jo2JYjB
      WoDL60DyrXIllaCxtoTZhVXKa+rIeGe4OLPK4aMPMH7pIg3dAzhVD2dHZimu7aFUXSVmruX+
      w/2IBnGLCES6+g9SujJPXEwRtTXxSF8BI8th+nv3k5nwYDCaaWpuQl5axWa+4b90V3UMfoT7
      9v4cFUi4r3Jmo4SB2miuw7qhTWeBLKUNdDSUYTJkwFrBQx++n8qiUvoH9uJ1r3DTD64scFa3
      8uCDH6Ki2I6UjBEIBFGB1u4+assc1DZ30tFUh4CKwWSlsqKK2poKDJpCNBIkmkhjKiijv7cL
      KaNx6P6H2NNcdUsxFJbVcWCwHyUaJC6r1Dc0IKgSGU2ksaEWOZXEVuhEkSRURaKorJpqp5mY
      VshgbyuJBOzf30vcu4IvJtF/5AH6Outp7e7DocTxx5M3jcG9OEXKUkZTTSVKRkbNZDAYrv/r
      NE3FVlhKfVUJ4VA+HWgqP3zm7/EHV7kwfJ7JxWCuA/olW3xcCNTV1wM2+ve3sbgeob2sAimd
      orW1fVfmT2vq6q59UhfVUWm4ilzWgLOkBDsWwEhdnYZZtIPJTFNDAxYtxeziKq3Njcwteehs
      b6bQKiIIsH9wgNHxeayNbbcUQ1GBienpBepaOym3qYxPztPZswdrJsz0opfe3j1kUmnsJoVI
      xkxhfIHVoJGGykICspHmihI21haobmmntcbB2Ng0meomzGoGa3k1FYU3Gle8j5pmfn4FWXST
      aOmhyBLi+AU3+4YOMnruNAvuFJoJkt5lopJGe2+u++AqF1//R8b9QfzffY6v/m//N79ujPN3
      zzzH3uaSHMf2y/RZIN2m3jp/9ZYGwX/w1P0c3Vu/gxFln54Auk15vV4qKytzHcaO0q8E6+5p
      uZ8y0OUtZf0K0ef+KOvtmroew/rI17Pe7u3QEyDvKSxMjLHsCdHUvR9CCyy4E/QNDZFwT+GX
      i+nvaUJTUpx89Qz9H/8IWbskpyogZf+6gpZJARBYGee5l14nlhH50m/9JmMvf4dpX4aPfupL
      7Kkvzvp+b0TvAuU9gZrmLg71d5OIeQjG7XxooIVVd4CKugbMaKBprC3OI4pG5FyHewtszlq+
      9BtfxRlfYfbq6zz9k1EMooXCgt27nUJPgLxnQIr5mPcm6GytQTRZMZnNqBkFq82KAEiJAJOL
      G6hSlEAgn64DbM2IzDN/8d+wDnyKo1VmKvd/hKcebuLp77+xazHoCZDv1CTn3h7G53Yxt5JA
      jS/w+onLOMuKGLtwhtHRS8y7E3R3tmIyGhHFu+dfeunn3+HtVY34yhSrjj1UbRznL7/7Ol09
      LbsWgz4Nmu80DfXdf5EgIHD9NmXtfT83vPv9O9tkw/qll3G8+ftZau06Y88nsX38v6KpKoqq
      AmAQxff+VtFg2LXbsPUE0G3K45qjDH/W2xXs5YhlrVlv93bos0C6TQmWQoyVt3bryN1GTwDd
      puTVVTa+/Z1ch/FLzE1NFD/x+ay0pSdA3tMIupe4Oudmz/5BDLE1JlxhBvr3IUfceOIi7Y0V
      LE5cYdEbpbv/ENXF23+KaytqLEby/IWstJVNWir13tdKbJVvP3+Sz3z5Cwz/9O+ZXI+z7/5P
      8EBf87ba0hMg7ymkVTtD+9qYWpknHUqyt7mYmZUNKixJ0jERVJmwbOPBhwburWk9LcOL3/0B
      Fy/N8sATv8qJkQ2+/vVbG7TfU+/X3clImdPMjMtHS2MZdkcFRaVO1LRMdW0tBgHQQIq5Of7G
      G6wEbv58wQeFd+os3sK9dFVYIZPAYUjzP/7bn/CzczPbbkNPgHynyYyMTFJaVgqalWRkhfnZ
      ZcwFVkJ+H6FQkFBMoqquibamCoL+cK4j3jXhaBLFP8PJC1cYvjDPfZ94nA/tq2d8enHbbehd
      oHynCVRWlhEO+EG00tvbzqovSUddGWvzExQXW0hIKnazSCBRSE9bda4j3jUdBx+h4+AjfObj
      j1DW1MLc5fNsFHbyOw8PbbsN/TqAblNr4+PYx67mOoxfYqyqwvHQg1lpS0+AGwiHw6TT6VyH
      kXPRaJTCwg9euZf30xNAt6nJuSVmPbvzQdBUXcy+1lsrWJAN+hjgJqK+Fa5MLFDb1oVNMFBT
      U/4Lv1eVDMm0TIHdtmMxpBMRfME4ZZVVGOQYvkiaqspyVClBXBYodlgJ+zeISwLVNZWIWbqN
      xh2I8Vc/2f4zwXfiscPt7GutQk5FmZlZwFxUQUtDJeuLswRTAl1dHZiz9Ye9j54AW9EkZhc2
      OHj0PgQ1yciFUdbc6+zZu4f12StEDSX0NFcRCEeQpSQhvx+Hw8bCaoA9e/dSYNmq3s92ZVhd
      XkNWJXzxFLJvDYvFSFQRsSRcbMTtHOhtJhQOkUqECadN7GnJv+oL2+VfX8LjD3HhhRd49Kkn
      mRieQ/Rd5vzaF/mtR7qyvj99GnQrqgRmB2ZRxGw2ogpm6orsbERDBAMBJi8MsxFPEIpEmBu/
      grG4ivXlOVREVE3NUhAize2tmEQTVWUmLEWN9PZ2kIomaO7oxGExYTCasBs1Vr0xyivu7j57
      dUsT3snLbGiFNNZ18fCRDsaXIwx01e7I/vQE2Ipox64FGb58mcX1AIXOUhx2O4IQJRwzUe0s
      JPPOEMpeWk19eRGVVbXENlbwBLP1KKHK4uwMzvpWqsvKSCWCxCMRDGbT9S0UGUdFMwf7mlh1
      ebK039wI+VN8+jd/h25LgOHJK/w/3/ge/+L3vk5/w84ktt4F2pKBzn0DhCMxLAUOjOUCokHA
      KkDJfU40wYTNbqWm2PnePfgllbUMFlVSVFSUnRDUDOFgkGX3GapbemiusXJlLkj/YD2j507i
      iShgMaIEVwimDfQNDGZnvzmSDq7w3PNnsXU+QH+5mXMVJbz8/Hc4+MjnONiZ/Wsc+iyQblPn
      Rqb54ZnlXdnXkT31fOaB7l3Z1/vpCaDb1L1QGEvvAuk2l0mh+GdzHcV7DEW1CKbsrhOhJ4Bu
      U4pnnMQOPBN8u2xP/C3GhkNZbVNPgLyXYfLSMOvBCJUte9E2ZlgPSnQPHSG1PsaGVMp9g50o
      qTA/feEYDzz1Oe7eqwDboylJvvGf/hXe6s/y1AED/3RmmlVvjP/wR39Amd108wbeR58GzXvX
      FsjY19WGzZxEsTTw8IP7CfjCdPTup8RmBk1lccFFY0Ptrqzck1saY2/9mPJ9R1FSMh0Hf4Wv
      PvEoRlXaxmo7v0w/A9wFPEszpKzlNFeZGPF60BSVa0/CXJOKuLk8NgXJBEpjM6XNH9xbojPJ
      ME9/+4dUtNZxZcbCzJUSnn7xLL/9b/4tFY5bryinJ0C+U1PMzi6SMa6RSvdQIPp58+wa+w4e
      YvTcaebXkxjsB/n8k59nbWISxwf44Acw2pz86dPfR9q4TPHPQ8xfPE1BSRGv/vRnlD31BKW2
      W+sC6dOguk3tVGGs27UTg2A9AXSb8no8VJTn0ZDaYEQQsjts1btAus0JAoJ4dy18fav0M4Bu
      Uyunz8Azz+Q6jBtyPPIIziefuON29DNA3lNYmhpn0R2kpWc/hBaZd8fpOzBE0jODXy6kr6uO
      8Qtn8cYzWS2MpSkZtHA+Lm8NWvJ6+ZeFCz/lb1738B/+96d460ffZSEg89gTX6Gl/Obvg34d
      IO8JVNS3c3igm0h4HV/EzNG+JlbdAUqqqjGqKigykrmU++//EFVF2Tn47xZaJsyLL58nFVzD
      P3uSHxwbx2AqoKhge7NBegLkPQNKMsDMWpSu1hqMFjtmqwVFzmAvsF+7DVsQMasRTh1/k5nV
      /FuMeicde/ovEFv3EfG5WXet03L0MT53wMZfPf/2tl6vd4HynZri/LnLWEpKWVp3oMQWOX5a
      pbF3kInL55mYD2O0mclkFIzGe+/zrOvDn8HhXmNEyVDYcQjt+NP8w6pIz6Nf29br9UFwvtM0
      ZFlC1cAgGhEFjYyiYTIZybzv54KmomgaZpOZbK0t4TpxAu1/fjM7jWVZ4Sceo+Qr/+LaN5qG
      JMuYTCYychopo2G32bb1PugJoNuUe2GB4nB+llo0VlRgqqu743b0BLgBvTDWNXphLN097dLV
      OY6NZu8h+4HOGh4e3L0F8LZDHwTfxOUzxwilzXT2DVBb6th0O1XJ4PX5qa56p7pZZIV5qZLW
      cjOqksC7IVFd7bytGMLeZcZm19nbP4ghts64K8zA/l4yUS+euEBLbRlzE1fwRAWGDg1gydJY
      OJxIcWIke88EFxVYeHiwhUwyyEvP/xBDVQ+ffOQoYirAD547xmNfeZLiXVoc7116AtyEaHbQ
      1tiIU0ywtAEOIYrZaGBp2YetrIjo8jphFQ4M7CeTkVmcuMRaVGOgxcn01WHWC2wM9rWQySjM
      jl1iPRCno28AyTvLwmqI9v2DBOaukLZVMbi34/13Ob8jQ1wyc6C3lcmlOdKhBD3NxUy7vJSZ
      IiQjJqgppaqpk/Koi6k5P30dZbl4q7ZtfXmRoUc/z8++8cdc7u0mfOqH/NPzxxn6ypPszvrw
      191782a3SM3IJJJJlGSEjXCSWCRIMh4iLDtori0AaxWddWXEU0l8AT+JRBLQyGQUqpq7qS+z
      kEzF8PsjJDJmBnt7iMdWCCQcDHQ2EEsmSKbSZDIy3LA3aqSy1Masy0dLYykFhZUUl5WgpmVq
      6+sxCCCIRpL+FYYn1qmqzlI5lh3U0NnL2MvPEKoepFl1M+JzMNSRm4fv9QS4icLSKjraWyl0
      lhKcv8LotAtEI1XVlYiCgQKHHZPZgtFgwGQyYjKZiEUjpBUBR4ENs8WCQbj2O3tBAUajCbPJ
      QTo0z9lL42Q0DaMoEgpFueEDTZrM2NVpyisrMRoKSEZXWV5cxWS3EguHicWiRGMRVJOTno46
      1lfyvzDW5Z/8f5yLN/KlTz5EeMOLIPk4PXKF02d2vxS7PgjOCYWrF87hS0Df0AFK7Fvccalm
      WJidIZKUKKlupNwis+RN0N7ehGt6hGgaSirrIOEjIol0drZnrYjsm+ev8mcvZq847q8e7eB3
      PnkA99wo568uoGHlvo99mHKbmcWrV6nYs4eCXR4D6Amg29To1AIX57N3HaCnqZzDe+qz1l42
      6Amg25ReGEt3T9MSPqTR4zu6D0E0Ydrz6R3dx1b0BLgLSMkYwWiSktIyhEyCUEymtNSJKqdI
      ZQQKC6yARjQUxu50ko1VCQDU4DLpN/9TllrbhKXwnQRQcS8vEpEEGpubENIRltd81Da2ZGmd
      hRvTEyDvZXAtLpGS03hCcWTfCoJoICj1YIotshF3cGigg1TYw7GfnuHBpz5Laa5Dvi0RLl0Y
      Rw7P8OroEOLMGzibmvnBKxf5w3/1azs2XalPg+Y9kZbOTuxWG+WlIuaiJgb6u0hE4rR0dlNo
      NaGpGRZcPjpb82uAeWuc1JSpnJtYYU+9k9Wklc9+7knU1TGiO7hX/QyQ9zSWZqcprG2nvFBl
      bX6WRFRFNFve2yId87G4uEwi4CdZ03B3FsZKRakbeJTftUn85fErmOQk4bCflGjHcvNX3zY9
      AfKdKhPwB1hav7ZARkOViUszPvYP7mf03AnWQwoGex+PPf4J/MsubI134cEPgMRrL3yfUErj
      qS8+gclzhRe+/yM+9xv/kp18yFOfBtVtyn31OIWXv7Gj+xDMBdiffHpH97Hl/vUE0G1Gvw6g
      u6dpsozsye97i4ylpQimW6sH+guvz2Isug8YaX6e9Tx9JvhdVX/8n7G0td326/UEyHvvLpAR
      pap1L5pvlrVAmp6hIyTXxvDJpRztb+H88TeJYaYni4Wx7iaakuRP//B/Re37Kh+rWOEnIz5S
      spn/+O//F2xbVMvQrwPkvWsLZPR1t2ExxsmY6nj4/j78GyE6evtwWk2gyKQEM41NrZTfY4Wx
      rtG4/OrzlO87QjqexucN0NDRiZAOI91k0Qw9Ae4CXtcsERy01FWCpl57cOZ9tw1rooW9PV2I
      cpCJ2fUcRpobctTLt779Y5anxhgePsesK0BVTSVWKUlMUbd8rd4FyndqiqnJeVSzhbTcgxUv
      r59xse/QYUbPnWZuLQlmI6mNeUKJDB397bmOeNeZCqv4y394jvDiab5/AQ4UzPHyyZNknDUU
      36RYmD4NqttUPhfGetedDoL1BLgBWZZR1a1PnfcC/8YGpY7NK2HkA8FiAcPt9+T1LtANSJKE
      LMu5DiPnZEUhlesgbuYOC5jpZ4AtaJqKlJbQANFowmQU3/u5qgmIBgFNU9E0MNzBp1C+OjU8
      ydOvTW+5zbd+73FE8e792/UzwBYUKcnE2NtMziQ5+OBR2ureqbeTcDHjr6C70U48ssqqx0JX
      507dMqDimplgfj1AW89+CC8xtx5n/4FBkt45fJKD3rZqxkcu4o8q7D1wiLJt1sa/GVlR2Agl
      ttzm3U/P0TMv8+aVIF/73S/iGn6Dl09cpuPoJ/n44Y6sxLJT7t7U3QVGSwH9QwN0dOylrc7B
      lbdP89bp8yQklZmRc7z65tukMyqgMj1ynreOn8Ef3uDNV1/j8sQi2RpFlFQ3c6S/m2BwFU9I
      5HBvPa71AIVl5YiKAoJIx95BehoL8fi2PmB3SmV1A+6lWWQ1w/MvvMKTv/07nHruaWI5iWb7
      9ATYJi0Zw59I41l3EUlItO87SHdZARFFgUyI0XEXaiZNUhYpsBqJxyJkZxxtACnC1GqY7rZa
      zBYHFpsVRc7gKHQgAILBQGh9nml3HKcjO5/+t6qqpg6j4Vr3MKUYKCxwUICU92MIPQFuykxJ
      SQEYLRRYTNTUN2CzFuOZu8CKLFJhL6KwpIo9XbWIZgtWowAGEYt1e/Xpby5DMKbQ292GSXRg
      NqWIRFKUlhUCIkVFBSiZNLbSRob2dZCIxbOx01tnMLF33x5MoonDgz34PCtU9H0o7x/P1AfB
      uk2dHJ7gr1+e2nKbv/mDT93Vg2A9AXSb0p8H0N3bNBUtc7N5dgHBePcupq0ngG5TytplYt/9
      /S23MZS0UPDVf9yliLLv7u283TMyTF+5wBtvvM7Mip+ZkbO89tqbeCJJ5sYvcGFsHgAtk+DV
      l35Grlb0yqQT/Pjv/gf/5VsvARnOvPIiv/+H/5XcTMpun54AeU+krXeAoX1daJkAcaWMjxzp
      we0J0tzVQ4FoAE1jeW4eZ3ExSq6iNNt47GMfJRgOAyIHP/o49rQva9dCdoqeAHlPIOxdZi0K
      bY1VCAYRQTSAqr03+5KObTA67SLgX2d9PZCbKAUBk/HdHrWA0WSC3a10flv0MUC+U5NcvnQV
      we5AM3QjSi6OnZDpGTrM6LlTTC3HEKyHePDB+1i5Ok5JSW7u3kwn1nn2719g9vI6Pz+1l7Tr
      KuMzM7zw4zf40uMfwZynH7X6NKhuU+uXXsbx5gd7EKwngG5T3rVlyixb3xYuiGYMzoZdiij7
      9C6QbnNGK2JZY66j2FH6GUC3qdXzFxB/vP3ujfNLv4Z1z54djCj79DNA3lPxLs8xteyls3cA
      Q3SFqZUo/YP7SQdcbCQtdLdWMztykZVgku4s1gVSU0mUmZntb//OjXhh7xI/euEYj/72V6g2
      GdmYOsOzpzx87bc+s6OFbm+HngB5T8NoL+dgn5Pp9WWksMRAexnzq35qi0woQQlUmbhQyEMP
      HcyLmcd0WsE9MYovo1JNlO+98BqLAQWJ/EuAPJ2c0l0nUmBWmHYFaG+uxGIvwV5UhCrJlJWX
      XVtZXhNQExu8+foxFr25fwSlsqGVincKdJ396fepGPgwFi2NJOfqMt3m9ATId1qai8NjWMwi
      0biAFFlmdHQGW5GdtaUF1tZWcPtjFDpLqa4oJhFL5jpgXDOjzLhWGLlwAaW4EdU7xfTsNK48
      SM5/Tu8C5T0jnT1dpGQFk9HCvv4+AlGJiooSgt4EXV1FWKxWCiqriKY1qqoqch0wZqudX/u3
      v49ostDWcR/3iQqPPPpJymuKcx3aL9FngXSbWp+axrG4uO3trf37MVVV7VxAOyDvEiAcDpO+
      w1ovuuyIRqMUFhbmOowdlXcJoMsfV6cXuLS49RqNX35kHwZDPsw93Z68HgNsuGYYn1vDWdNM
      b1sNVy6cobKjH8/EKNXtbRSXVOGw7PA4Xk1y+vQoQx86hHmT//Pq0iwl1fVISRWn0571EBLh
      DZbdIRqaWzGkgrh8CVqaG1BSYcIpgcrSQjwri4SSAm3tLZiy9JZshBM89+b4ltt88eFeDAjE
      gutML4Xo6+9BCns4e36M7qH7qHHashPMDsnfWSAthcuT4kMP3I8pHWB+4iozrg08C1cYXwig
      plOkFBX34gRnzo0QCXs5c+o0vlh2SxpGV5cwF1lw+1ME3S7ePnOKJU8Yr2uO06dO4g4liUVC
      yJk0sVialZkRTp0dJiFJzI+PcOrMBeJpibmrF7k4Pk/Et8Kp0+eJJNNMj17g/NjcTSLIsOGL
      UmQTmF1cYOzqLEYpwOyaH693lbU1H5qqoolmCsQwUwv+rP792zV2/iTPPPMsSVXhO9/8Bjgs
      /Pmf/SWZnESzffmbAGoGTFZEg4jFZKSkto0DQwcYGOimd+8A5cYM4WiY1YjGwYEuJi5eIJZO
      MjG5/SuXN6cx5XJjQ2F1ZZmQL8ieoYN4lmcJheL0HxrCNTsJgKImCQZjxBMpohtrLKy5CcYF
      umvK8bonCRrq6eto4OK5t0knNhifXsEXDGMxGti6D2qkvqGaWFyitsqOraie1rZGpHiKxpZW
      rEYRg2hElGNML/iorMrNTMuRBz+G025EUzO4ghmOHLmfsvgquUnH7cvfBBDtFGh+jp84zkoo
      Q4H1lws+GUxmlKiX88MT2EucGEUzlRVlWQtBk2NI2CkoLkFLhkmlYgyffZuMsQApHuD822cx
      2Eve/wJ8vig2mx1NU7A7CjEZjRjtxcRWr3JlagmnswSj1UllWSF2i8jczMJNnuJSmJ9dpLql
      gwpnGYnYBuFAEIPl+vuhKBK2skYO97exsuTO2t9/OwSDSLExw7pnDS8F5N/E5y/K60Gwpqko
      iorBIP5Ckan3L5CiaSqqCqIovLdttgZlmqahAQZBQFVV1ubnKWluxiaKrMzNUdHcjFUU3wtI
      0wBNReWdYrnvi1NVFTQEREFAUa/FqWkKGgaMW9XVUSVGhy/ij6WpbumhxppkwhVloH8v08PH
      8cWhpqkDLbKKPyUyeGAAe5YGAW+ev8qfvTi65TYv/OcvYBQTvPD091iLpahoG+RX+it46adv
      ceQTX6CnLr9TIK8TQJdbw1dn+fnlrc8o/+5L9yHexZWx9QTQbUovjJVLmsL8+Agr/gTte/dT
      W3aTZ11TIeYCKjWFAkZ7CWZxd8L8INPSUTLLC7f2IkHA2HBoZwLaAXmcAGlc3gQHjhzAZFTw
      esIUWjVkkxX33Ai+tI0DfZ0sTI0RkqwMdZYRjCoUaRI2SyGzIxcRnI3UFypcnlxl3+AATvvd
      WcFMU1VUTXtnEQ4NVb3+taYJ74x5rv1cMBiydku06psheZNngn+JaKbwXw+/F7eiaohGETSV
      TEZBMIhbj3l2Wf4mgMHO4aEuhs+/TXlrA1E3NJdpRApKSWlW+moEJhcDiNYSustTzLqiINqJ
      BfxEIxEm3WHMnqtkKouw2Gyod21PL8P0yGU8oQjO+k7UjVn8UZnW/sNkNibwJIu5f6gbOR7g
      H58/xod/4wt5U5H5le/9Oc+djfGNP/+PnH7ur7nklunsO8qnPjyY69Dekz+p+M8pKWam58Fg
      QFFEIhtzXBqbIaOCf3WO4SkPJUUmPMszjEx7cDqvP2phKSzCYbFQVVNLaUkxYc8S7kCOyobf
      MZHO/Qdob6qnuCCDoaCFjz44QDgQoWNvH2UFVtAUFhbXaG9rznWwv+Djn/oi1SVWkOO8+sbb
      mI0KruW1nBXvupE8PgNY6OkbQNE0TCYTHbW119blEg3QtoemljbETAqpvYfG2lpMRgMV1SBo
      1QgGA5WVtWiCiGiA8toWTObcLByRDatzEwgljTSWClxacyGnTRiM1wc5qYiXiel5MtEIcn0j
      pc3VOYz2BgQDxeV1fOErX+M7//2/E9EepyRPbh/K3wQQrlUXezdAg+l6/72js8TnFwkAAAyX
      SURBVOvaFyYH7U3XB8fi+95Uk9ly/ed384BYTbOy4ia14iXa0kNZQZLTlwP0DR1g9NwpljfS
      GOwH+PRnP41nZhZ73hz8EZ799nMkol5+8uYYn//kgzz719+i/uijOPPk4Ad9GlS3hfUrr+I4
      9X/e0msE0Yzjd9/aoYiyT08A3abuhesA+TsI1ul2Qf6OAXQ5l56aYvlf/5tbe5HJROO3n9mZ
      gHaAngB5T2F29AorvjANnfshOMeiN8m+g4eIr44TUEo4sLeRK2dOEZCgJ4uFse7UGy/+DSfn
      Dfz73/sqC2d/zstvT9HSdz+f/oh+HUC3bQaauvcx1NeNLPmISk4eOtiJ2x2gvq0Du0EARUYy
      FTLQP0BlUX4c/ABH7v8IyYgPVU7w7PdeRDCZsFqtN3n+YXfpCZD3BGL+NVZCGdqbqjGI164B
      qKqKyfTOCVwwUlFsYW56lKklX27DfR+b1XbttgxNBVsZv/6bv8HFHz9LOI8yQO8C5Ts1yfCF
      EQyOQjB2Q2qJYydkug4cYfTcKSYWo2A2kvL7iMTTlDRYbt7mrojw7N99h7GRC/zoras80N/A
      N//iGxhqOnHo1wF0dwPXiRNo//Obt/aiu2wQrCeAblOe5WVKlFu8c0cQMDc370g8O0FPgBvQ
      i3NdoxfG0t3Tzo/O8KOzrlyHAcCvHu3k6N76rLerD4JvQpNDvPzKRR567KPY37nbTgptkCyo
      oHhXbjDV2FiZY3LRS3ffIIboCpMrEfoH9iMFV/EmTXQ2VjAzdglPDAaGDuDI0pKM8ZTE6Lw3
      K23dqSN73j34NeaGX+eUy8RTnxji/Bs/I1U5xIf7m26rXX0a9CY2llZp3lOP2xPFszTPxeGL
      XDh1nNdPvk04kd0iXDemIphLONjXwfraIvMrcfa3lDC/4iMjaGQSaUCgvn0vexvtLLpCuxBT
      7sgxL//089c4fXYUKZlAiK5xYvT2z1J6AmxF05hemMU1Pcvs0hLxcIiGrl729+7hwKHDFNl2
      4wQqUmSH6WU/bc0V2ApKKSguRpVkKiorMQjXavHENpYZmd2gvDw36wTvlhM/+j5dDz2GVVAw
      O8robK27owW59QTYgpaJUdo8yMd+5eO0OI0YCkooLrBgLrJz9dxZIsldKPynSQxfGsfhsJFM
      G0lFXExMzGEttONdW8HrdeP1+4nLRuprSvG6N3Y+phwSi8pwXTrNxNgFppdWGRmfY21hmvXA
      7S2+oQ+C852m4FlbIyFlcJRUUGTK4A2nqamuxLe2SFIGh7MMUhESGQO1dTWYslQYbDuFsXbL
      1x4f5PH7Oq99o6RYXg9T7oCrU4uoGGho76a27NZnrPQE0G1qYnaJqfVcL7l0zb62Stpqs/+4
      v54Auk3dCw/E6NOguk1pUTfphRdzHcYdESyFmPu/vOnv9QS4CySjAda8YWoaGjGkw6wHkjQ0
      1KKkokTSAhUlhYDGxpobZ20N2bo8oUbWkE7/v1lqLTeEojrM/V9GUxXGL5/DF5Vo6RnEkdlg
      fMGrzwLlvwwedwCTIDGzsMjo6BRyxM3sWgC3ewmXywNAIrDGmePn2XpBo3uXkoryg5d+Rnl5
      OTY1yDf/9gcYMkE9AfKfkcbmetKSQk2lFVtRA51dLaRjSZpa27GZjGiKxOJaiK7mulwHm7cy
      SoCIJ8Qbr58ghA2nEOetU2f1BMh/CvOzc1Q2tlNZUkYi5iMaDP3CAhlSIsjqygpj0+MsLOZ2
      gYx8ZTQ6+Xd//Cd8ps/M3/3gVRbidn73X35ZHwPkPVUhHg2zcu401S09dDQVMbYcpb+/mdFz
      x9mIqRjsvXzs479CaN2NpSZfCmPlF8Egcu6VH+CR7Pze1z7P6vAxvv/ScX0aVLc598QZiib/
      Ptdh3BGhoAzbo/9l89/rCaDbjH4dQHdPU5NJ0tPTuQ5jR+kJoNuUvLyM51afCb7L6AmQ9zJM
      XhpmPRCmvHkPqncGT0Sic/AosucqnpST+w+0ceb110kZbXlVGOtuoE+D5j2Rrv6D9LS3UGiT
      EAqaeeTBQUKBMB29+68tkKFkSKoCpWXVlBbqB/+t0BPgLrC+MEnGXklTTQVKRkKRZQzvW/RA
      M1g4ePgwtU6N8em1HEZ699G7QPlOTbO4uIZk8BBr6cFpjXJyeIN9Q0OMnjvFkjcFFhOZwBKB
      eIbu/uZcR3xX0adBdZtynTyJ9q2/ynUYO0pPgBtIpVIot1oQ6gMoGAxSUlKS6zB2lD4G0N3T
      9DPATcQjAeIpBUexE7vlxnfay7KEKJreWbD6g+P4hXH+4sdjuQ4jqwQEnvu/nnzve30QfBPT
      46OYCktYWPGxp6kIzVFH0T8rwOxeXaSkqg2HbSeWo1SYvzrK8kaIpq79EJxnwZOg7+Ah4msT
      BDJO9nfWcvXyefzRDN2DR6guzk6FaFXTkDNqVtrKR2f+6R/0BLgZORUnlNIoq2sj4fMhyyJn
      x8cQFIGBA31cuTRKXM5wn83OqbfGEByV7K8SGVmL0VrlYHzBQ9+BozRV3m6NTYG69j1U1QZY
      DnpJpQp54EAtE+4AXU0txOeDCKKJjr39OFemiUalrCXAB1pqgb999qQ+BrgZZ1ULD9x/mEwk
      gJSRURSN1r0HGOyuxbcaoHXoML3t9UTWlkiZinDYzagY2H/oKDVVVVQ67YRDkTuIwEAq5GbJ
      l6ajuQbRaEY0mVAVBYvFjAAIgkAi5GUjprBJL033z8kJbPV9+hngpqQQJ0+dp6apkyKLhGIr
      QBWNWMwlVJcWMn3lEoq1iH2d+6i+fAmMZgpKihBNBrSkiiRr1DjvoMKymuTcuUsYC4sxmM1o
      8UWOHZfpfGeBjPGFCKpJI+5eJi7J2Muk7P3tH2SODnoLv6sPgnWby6fCWNn0oz/54ntf6wmg
      29SSa5Wk+sEbT3Q3lb/3td4F0m3KZjHRVFl+8w3vYnoC6Dal+udInPp6rsPIKuvDf4ShqPa9
      7/UEyHvvPA8QjFLb3geBGZY3Uuw7dJSoa4SgWs6hvja0TJxXXnqDo088TnGW9ixpImuZojtq
      Q81kMBjv7DDLZhtmbwAhfv2CpT4G0G3q0uwir3tur+z4u2ZOHqPj/ofztg39OoDunqafAXSb
      ysYZQNM0BOHO7pHayTb0M4BuR93pgbvTbegJoNtS2r/M7NkzJBLbXzdZkWKsDJ/ENTmLIidw
      XTiBd8XDrXY15NAqa3MuVCnG4tm38LkDt9iGRmR5nLlz55EkmY2J8yxdnf6FNvQE0G1BwbPk
      pmlvG76llW0ffGpGobz7IFY5gGdhjsLW/SiBJST5Fg5fVcI95yKd8OOfnaS89xApzzyKcgtt
      yAF8Po3mA4MI8gYpKnEa/ATj19vQE0C3hQxGazHGAgeisv0FAY02B0nPLIbyNkxGEZvdjsVh
      IZPZ7sGrEXHNYa9txqAqyIIFu82KyWpEvZW7s+MBosENZk8cI+wLYCkup6i8kGTs+t+iJ4Bu
      C2a0lA/P5CSazb7t1UgT6zMEQzKCEsdsFPHMTRD2p7FYtn+4qUqG8OIkG8vLmJBZnR4nEdcw
      Gm9hPFBUi7PYjrO8CFkoJOYaYWlmA2fp9Vtm9Vkg3aYuzS7y2rKHsD9MUVUNori9gy+TCBPx
      BRBEE4VVNSR96xiLyrHZb61mkaapyKkUZquFiHsNc0kVVqv5ltqQon4ScYWiynKk8AYyVgpL
      rl8q1BNAt6lsTIPmO70LpLun6Qmgu6fpCaC7p+kJoLun6Qmgy7no4hUWxheQo242XFsv8hec
      HiUpb7/t+NoUC1fGUVUF19uvMX3iNTbWA+/9Xn8eQJdzyXAI7/wS5eVdRANgtWrYC6ykFAtJ
      zxyJaAarwwCWStKrc/hiKcqburAbYqwvrFGzt4+U30sqLVPV0kI6uIZ70U1VZxuzb7yOfd/D
      oKmkYhrNH3mAyWOvUVJ0lLWpOT0BdPlApGFPHSsTLizOBjyz49Q1VhBMlxFaWKbSqZAyHyY+
      OYrNJFLa1Irr/HEMSS+a2UpaMZNaHqf5Y58CJOYvXKZpfxcLI7MUV9fhbGtBEECKrDP58ksU
      th5l4eTLJBWL3gXS5QdjaQdCeBZJBTniw7OwhKqCwWzBaDZisjsQDQKgEVyYwmArwVZciqOu
      i8qGMiwlNTiK7ICI2aSysbSMqcCBwWhENJoQAHNRDXU9XUixAGZHCQXVzfqFMN3mdutCmCKl
      QTShyUk0gxnkJIomYLTa0RQZUdDQRAuqLCGgIqfTmAqKEFSZdCKJye4AVcVotSAAqpwilUhj
      cRSiZdIYzDYMaMjpNEaLBTmZwGg2kYrF9QTQbU6/EqzTfcD9/6+TtMlRMxbtAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACRUlEQVR4nO3XMQ6DMBQFQSdKQQH3PycVDZJzh0QWxc4cwO83W/g155wDot5PHwBPEgBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpn5WPzznHdV0rJ+Av
      SwO473uc5zn2fV85Az9bGsAYY2zbNo7jWD0DP/EHIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApH0Bnt4RjhFBOTgA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Subcategorywise Profit Distribution For Top 10 Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Profitable Countries Last 3 Years' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 Sales Persons-Profits by Category/Subcategorywise' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 Sales persons-sales by category/subcategory' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
